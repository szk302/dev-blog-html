<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on Szk302 Tech Blog</title>
    <link>https://szk302.dev/posts/</link>
    <description>Recent content in Posts on Szk302 Tech Blog</description>
    <image>
      <url>https://www.gravatar.com/avatar/d9669165d1baf624cedab4afc3dfcc42</url>
      <link>https://www.gravatar.com/avatar/d9669165d1baf624cedab4afc3dfcc42</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>Copyright (c) 2021年 Szk302</copyright>
    <lastBuildDate>Wed, 05 Oct 2022 08:58:00 +0900</lastBuildDate><atom:link href="https://szk302.dev/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>AWSCLIでAmazonSQSのQueueを作成する</title>
      <link>https://szk302.dev/posts/AWSCLI%E3%81%A7AmazonSQS%E3%81%AEQueue%E3%82%92%E4%BD%9C%E6%88%90%E3%81%99%E3%82%8B/</link>
      <pubDate>Wed, 05 Oct 2022 08:58:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/AWSCLI%E3%81%A7AmazonSQS%E3%81%AEQueue%E3%82%92%E4%BD%9C%E6%88%90%E3%81%99%E3%82%8B/</guid>
      <description>手順 作成 標準Queue 標準Queueを作成 QUEUE_NAME=&amp;#34;my-queue&amp;#34; ## Queueの作成 aws sqs create-queue --queue-name ${QUEUE_NAME} ## QueueのURL取得 QUEUE_URL=$(aws sqs get-queue-url --queue-name ${QUEUE_NAME} --output text) FIFOQueue FIFOQueueを作成する</description>
    </item>
    
    <item>
      <title>AWSCLIでJSONファイルの内容をAmazonSQSのQueueに送信する</title>
      <link>https://szk302.dev/posts/AWSCLI%E3%81%A7JSON%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%AE%E5%86%85%E5%AE%B9%E3%82%92AmazonSQS%E3%81%AEQueue%E3%81%AB%E9%80%81%E4%BF%A1%E3%81%99%E3%82%8B/</link>
      <pubDate>Tue, 04 Oct 2022 08:27:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/AWSCLI%E3%81%A7JSON%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%AE%E5%86%85%E5%AE%B9%E3%82%92AmazonSQS%E3%81%AEQueue%E3%81%AB%E9%80%81%E4%BF%A1%E3%81%99%E3%82%8B/</guid>
      <description>準備 メッセージを用意 { &amp;#34;id&amp;#34;: &amp;#34;xyz&amp;#34;, &amp;#34;type&amp;#34;: &amp;#34;TYPE&amp;#34;, &amp;#34;body&amp;#34;: &amp;#34;あいうえお。\nかきくけこ。&amp;#34;, &amp;#34;nest&amp;#34;:{ &amp;#34;key&amp;#34;: &amp;#34;サシスセソ。\nタチツテト。&amp;#34;, &amp;#34;array&amp;#34;: [</description>
    </item>
    
    <item>
      <title>AWSCLIとJQでJSONファイルの内容を送信する</title>
      <link>https://szk302.dev/posts/AWSCLI%E3%81%A8JQ%E3%81%A7JSON%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%AE%E5%86%85%E5%AE%B9%E3%82%92%E9%80%81%E4%BF%A1%E3%81%99%E3%82%8B/</link>
      <pubDate>Tue, 04 Oct 2022 08:27:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/AWSCLI%E3%81%A8JQ%E3%81%A7JSON%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%AE%E5%86%85%E5%AE%B9%E3%82%92%E9%80%81%E4%BF%A1%E3%81%99%E3%82%8B/</guid>
      <description>準備 メッセージを用意 { &amp;#34;id&amp;#34;: &amp;#34;xyz&amp;#34;, &amp;#34;type&amp;#34;: &amp;#34;TYPE&amp;#34;, &amp;#34;body&amp;#34;: &amp;#34;あいうえお。\nかきくけこ。&amp;#34;, &amp;#34;nest&amp;#34;:{ &amp;#34;key&amp;#34;: &amp;#34;サシスセソ。\nタチツテト。&amp;#34;, &amp;#34;array&amp;#34;: [</description>
    </item>
    
    <item>
      <title>jqでjsonをエスケープ済みの文字列として出力する</title>
      <link>https://szk302.dev/posts/jq%E3%81%A7json%E3%82%92%E3%82%A8%E3%82%B9%E3%82%B1%E3%83%BC%E3%83%97%E6%B8%88%E3%81%BF%E3%81%AE%E6%96%87%E5%AD%97%E5%88%97%E3%81%A8%E3%81%97%E3%81%A6%E5%87%BA%E5%8A%9B%E3%81%99%E3%82%8B/</link>
      <pubDate>Mon, 03 Oct 2022 08:58:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/jq%E3%81%A7json%E3%82%92%E3%82%A8%E3%82%B9%E3%82%B1%E3%83%BC%E3%83%97%E6%B8%88%E3%81%BF%E3%81%AE%E6%96%87%E5%AD%97%E5%88%97%E3%81%A8%E3%81%97%E3%81%A6%E5%87%BA%E5%8A%9B%E3%81%99%E3%82%8B/</guid>
      <description>jqでjsonファイルを文字列として出力したい。 対応 @json オプションを使用する message.json { &amp;#34;id&amp;#34;: &amp;#34;xyz&amp;#34;, &amp;#34;type&amp;#34;: &amp;#34;TYPE&amp;#34;, &amp;#34;body&amp;#34;: &amp;#34;あいうえお。\nかきくけこ。&amp;#34;, &amp;#34;nest&amp;#34;:{</description>
    </item>
    
    <item>
      <title>PowerShellで未使用のTCPポートを取得する</title>
      <link>https://szk302.dev/posts/PowerShell%E3%81%A7%E6%9C%AA%E4%BD%BF%E7%94%A8%E3%81%AETCP%E3%83%9D%E3%83%BC%E3%83%88%E3%82%92%E5%8F%96%E5%BE%97%E3%81%99%E3%82%8B/</link>
      <pubDate>Mon, 03 Oct 2022 08:38:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/PowerShell%E3%81%A7%E6%9C%AA%E4%BD%BF%E7%94%A8%E3%81%AETCP%E3%83%9D%E3%83%BC%E3%83%88%E3%82%92%E5%8F%96%E5%BE%97%E3%81%99%E3%82%8B/</guid>
      <description>PowerShellを使用して未使用のTCPポートを取得したい。 方法 Get-NetTCPConnectionで使用中のポート番号のListを</description>
    </item>
    
    <item>
      <title>PowerShellでStart-Processを使用して複数のオプションとともにコマンドを実行する</title>
      <link>https://szk302.dev/posts/PowerShell%E3%81%A7Start-Process%E3%82%92%E4%BD%BF%E7%94%A8%E3%81%97%E3%81%A6%E8%A4%87%E6%95%B0%E3%81%AE%E3%82%AA%E3%83%97%E3%82%B7%E3%83%A7%E3%83%B3%E3%81%A8%E3%81%A8%E3%82%82%E3%81%AB%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89%E3%82%92%E5%AE%9F%E8%A1%8C%E3%81%99%E3%82%8B/</link>
      <pubDate>Mon, 03 Oct 2022 07:42:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/PowerShell%E3%81%A7Start-Process%E3%82%92%E4%BD%BF%E7%94%A8%E3%81%97%E3%81%A6%E8%A4%87%E6%95%B0%E3%81%AE%E3%82%AA%E3%83%97%E3%82%B7%E3%83%A7%E3%83%B3%E3%81%A8%E3%81%A8%E3%82%82%E3%81%AB%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89%E3%82%92%E5%AE%9F%E8%A1%8C%E3%81%99%E3%82%8B/</guid>
      <description>オプション -ArgumentList*を指定し、複数のパラメータの場合は *, で区切る 例 Start-Process -FilePath aws.exe -ArgumentList &amp;#39;ssm&amp;#39;,&amp;#39;start-session&amp;#39;,&amp;#39;--target&amp;#39;,&amp;#34;${instanceId}&amp;#34;,&amp;#39;--document-name&amp;#39;,&amp;#39;AWS-StartPortForwardingSession&amp;#39;,&amp;#39;--parameters&amp;#39;,&amp;#34;{\`&amp;#34;portNumber\`&amp;#34;:[\`&amp;#34;22\`&amp;#34;],\`&amp;#34;localPortNumber\`&amp;#34;:[\`&amp;#34;${port}\`&amp;#34;]}&amp;#34; -Wait 参考 Microsoft Ignite/Learn/PowerS</description>
    </item>
    
    <item>
      <title>Batでディレクトリやファイルを静かに削除する</title>
      <link>https://szk302.dev/posts/Bat%E3%81%A7%E3%83%87%E3%82%A3%E3%83%AC%E3%82%AF%E3%83%88%E3%83%AA%E3%82%84%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%E9%9D%99%E3%81%8B%E3%81%AB%E5%89%8A%E9%99%A4%E3%81%99%E3%82%8B/</link>
      <pubDate>Mon, 03 Oct 2022 05:30:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/Bat%E3%81%A7%E3%83%87%E3%82%A3%E3%83%AC%E3%82%AF%E3%83%88%E3%83%AA%E3%82%84%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%E9%9D%99%E3%81%8B%E3%81%AB%E5%89%8A%E9%99%A4%E3%81%99%E3%82%8B/</guid>
      <description>ディレクトリやファイルをコンソール非表示で強制削除したい() ディレクトリの削除 rd /s /q %dirPath% ファイルの削除 del /q %filePath% ディレクトリの削除(ディレクトリが</description>
    </item>
    
    <item>
      <title>使い捨てEC2環境を作成してVSCodeを立ち上げるバッチ</title>
      <link>https://szk302.dev/posts/%E4%BD%BF%E3%81%84%E6%8D%A8%E3%81%A6EC2%E7%92%B0%E5%A2%83%E3%82%92%E4%BD%9C%E6%88%90%E3%81%97%E3%81%A6VSCode%E3%82%92%E7%AB%8B%E3%81%A1%E4%B8%8A%E3%81%92%E3%82%8B%E3%83%90%E3%83%83%E3%83%81/</link>
      <pubDate>Sat, 01 Oct 2022 07:33:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/%E4%BD%BF%E3%81%84%E6%8D%A8%E3%81%A6EC2%E7%92%B0%E5%A2%83%E3%82%92%E4%BD%9C%E6%88%90%E3%81%97%E3%81%A6VSCode%E3%82%92%E7%AB%8B%E3%81%A1%E4%B8%8A%E3%81%92%E3%82%8B%E3%83%90%E3%83%83%E3%83%81/</guid>
      <description>使い捨て環境をサクッと作りたくてバッチを適当に書いた。 実行するとSSM経由で接続できるEC2を起動し、SSHの設定と共にKeyPairを取得</description>
    </item>
    
    <item>
      <title>AWSSystemsManagerParameterStoreから最新のAMI-IDを取得する</title>
      <link>https://szk302.dev/posts/AWSSystemsManagerParameterStore%E3%81%8B%E3%82%89%E6%9C%80%E6%96%B0%E3%81%AEAMI-ID%E3%82%92%E5%8F%96%E5%BE%97%E3%81%99%E3%82%8B/</link>
      <pubDate>Wed, 28 Sep 2022 07:38:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/AWSSystemsManagerParameterStore%E3%81%8B%E3%82%89%E6%9C%80%E6%96%B0%E3%81%AEAMI-ID%E3%82%92%E5%8F%96%E5%BE%97%E3%81%99%E3%82%8B/</guid>
      <description>いつの間にかParameterStoreから最新のAMI-IDを取得できるようになっていたためメモ 各AWSサービスで使用できるPublicパ</description>
    </item>
    
    <item>
      <title>CloudFormationでSSM経由で接続できる使い捨てEC2を建てる</title>
      <link>https://szk302.dev/posts/CloudFormation%E3%81%A7SSM%E7%B5%8C%E7%94%B1%E3%81%A7%E6%8E%A5%E7%B6%9A%E3%81%A7%E3%81%8D%E3%82%8B%E4%BD%BF%E3%81%84%E6%8D%A8%E3%81%A6EC2%E3%82%92%E5%BB%BA%E3%81%A6%E3%82%8B/CloudFormation%E3%81%A7SSM%E7%B5%8C%E7%94%B1%E3%81%A7%E6%8E%A5%E7%B6%9A%E3%81%A7%E3%81%8D%E3%82%8B%E4%BD%BF%E3%81%84%E6%8D%A8%E3%81%A6EC2%E3%82%92%E5%BB%BA%E3%81%A6%E3%82%8B/</link>
      <pubDate>Tue, 27 Sep 2022 07:30:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/CloudFormation%E3%81%A7SSM%E7%B5%8C%E7%94%B1%E3%81%A7%E6%8E%A5%E7%B6%9A%E3%81%A7%E3%81%8D%E3%82%8B%E4%BD%BF%E3%81%84%E6%8D%A8%E3%81%A6EC2%E3%82%92%E5%BB%BA%E3%81%A6%E3%82%8B/CloudFormation%E3%81%A7SSM%E7%B5%8C%E7%94%B1%E3%81%A7%E6%8E%A5%E7%B6%9A%E3%81%A7%E3%81%8D%E3%82%8B%E4%BD%BF%E3%81%84%E6%8D%A8%E3%81%A6EC2%E3%82%92%E5%BB%BA%E3%81%A6%E3%82%8B/</guid>
      <description>実験用の使い捨てEC2を建てたくなることが多々あるため、CloudFormationでデフォルトVPCにEC2を簡単に建てるメモ。 準備 Clo</description>
    </item>
    
    <item>
      <title>AmazonLinux2にExtrasLibraryからDockerとdocker-composeをインストールする</title>
      <link>https://szk302.dev/posts/AmazonLinux2%E3%81%ABExtrasLibrary%E3%81%8B%E3%82%89Docker%E3%81%A8docker-compose%E3%82%92%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E3%81%99%E3%82%8B/</link>
      <pubDate>Sun, 25 Sep 2022 10:23:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/AmazonLinux2%E3%81%ABExtrasLibrary%E3%81%8B%E3%82%89Docker%E3%81%A8docker-compose%E3%82%92%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E3%81%99%E3%82%8B/</guid>
      <description>AmazonLinux2にExtrasLibraryからDockerとdocker-composeをインストールする ec2-userで接続中</description>
    </item>
    
    <item>
      <title>psqlでSELECTした結果をCSVとして出力する</title>
      <link>https://szk302.dev/posts/psql%E3%81%A7SELECT%E3%81%97%E3%81%9F%E7%B5%90%E6%9E%9C%E3%82%92CSV%E3%81%A8%E3%81%97%E3%81%A6%E5%87%BA%E5%8A%9B%E3%81%99%E3%82%8B/</link>
      <pubDate>Tue, 13 Sep 2022 07:12:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/psql%E3%81%A7SELECT%E3%81%97%E3%81%9F%E7%B5%90%E6%9E%9C%E3%82%92CSV%E3%81%A8%E3%81%97%E3%81%A6%E5%87%BA%E5%8A%9B%E3%81%99%E3%82%8B/</guid>
      <description>psqlでselectした結果をCSVとして出力したい。 方法 2つの方法を試した。 COPYコマンドでCSV出力 セパレータに,を指定してコマンド</description>
    </item>
    
    <item>
      <title>PostgreSQLでlog_statementとlog_min_duration_statementの関係を調べた</title>
      <link>https://szk302.dev/posts/PostgreSQL%E3%81%A7log_statement%E3%81%A8log_min_duration_statement%E3%81%AE%E9%96%A2%E4%BF%82%E3%82%92%E8%AA%BF%E3%81%B9%E3%81%9F/PostgreSQL%E3%81%A7log_statement%E3%81%A8log_min_duration_statement%E3%81%AE%E9%96%A2%E4%BF%82%E3%82%92%E8%AA%BF%E3%81%B9%E3%81%9F/</link>
      <pubDate>Sun, 11 Sep 2022 12:06:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/PostgreSQL%E3%81%A7log_statement%E3%81%A8log_min_duration_statement%E3%81%AE%E9%96%A2%E4%BF%82%E3%82%92%E8%AA%BF%E3%81%B9%E3%81%9F/PostgreSQL%E3%81%A7log_statement%E3%81%A8log_min_duration_statement%E3%81%AE%E9%96%A2%E4%BF%82%E3%82%92%E8%AA%BF%E3%81%B9%E3%81%9F/</guid>
      <description>log_statementとlog_min_duration_statementを指定したときのクエリーの出方がわからなかったため調査。 pg</description>
    </item>
    
    <item>
      <title>SchemaSpyでDBのテーブル定義書を生成する</title>
      <link>https://szk302.dev/posts/SchemaSpy%E3%81%A7DB%E3%81%AE%E3%83%86%E3%83%BC%E3%83%96%E3%83%AB%E5%AE%9A%E7%BE%A9%E6%9B%B8%E3%82%92%E7%94%9F%E6%88%90%E3%81%99%E3%82%8B/SchemaSpy%E3%81%A7DB%E3%81%AE%E3%83%86%E3%83%BC%E3%83%96%E3%83%AB%E5%AE%9A%E7%BE%A9%E6%9B%B8%E3%82%92%E7%94%9F%E6%88%90%E3%81%99%E3%82%8B/</link>
      <pubDate>Mon, 05 Sep 2022 06:57:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/SchemaSpy%E3%81%A7DB%E3%81%AE%E3%83%86%E3%83%BC%E3%83%96%E3%83%AB%E5%AE%9A%E7%BE%A9%E6%9B%B8%E3%82%92%E7%94%9F%E6%88%90%E3%81%99%E3%82%8B/SchemaSpy%E3%81%A7DB%E3%81%AE%E3%83%86%E3%83%BC%E3%83%96%E3%83%AB%E5%AE%9A%E7%BE%A9%E6%9B%B8%E3%82%92%E7%94%9F%E6%88%90%E3%81%99%E3%82%8B/</guid>
      <description>SchmaSpyで手元のPostgreSQL用DDLからテーブル定義書を生成してみる 方法 PostgreSQLのDockerでDDLからテーブ</description>
    </item>
    
    <item>
      <title>BashでTCPコネクションが受け付けるまでwaitする</title>
      <link>https://szk302.dev/posts/Bash%E3%81%A7TCP%E3%82%B3%E3%83%8D%E3%82%AF%E3%82%B7%E3%83%A7%E3%83%B3%E3%81%8C%E5%8F%97%E3%81%91%E4%BB%98%E3%81%91%E3%82%8B%E3%81%BE%E3%81%A7wait%E3%81%99%E3%82%8B/</link>
      <pubDate>Sun, 04 Sep 2022 13:50:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/Bash%E3%81%A7TCP%E3%82%B3%E3%83%8D%E3%82%AF%E3%82%B7%E3%83%A7%E3%83%B3%E3%81%8C%E5%8F%97%E3%81%91%E4%BB%98%E3%81%91%E3%82%8B%E3%81%BE%E3%81%A7wait%E3%81%99%E3%82%8B/</guid>
      <description>BashでTCP接続可能になるまでまち、接続できたら終了する方法を調べた。 方法はncコマンドを使用する方法とBashだけでできる方法があるら</description>
    </item>
    
    <item>
      <title>DockerでPostgreSQLのPlaygroundを作る</title>
      <link>https://szk302.dev/posts/Docker%E3%81%A7PostgreSQL%E3%81%AEPlayground%E3%82%92%E4%BD%9C%E3%82%8B/Docker%E3%81%A7PostgreSQL%E3%81%AEPlayground%E3%82%92%E4%BD%9C%E3%82%8B/</link>
      <pubDate>Fri, 02 Sep 2022 23:27:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/Docker%E3%81%A7PostgreSQL%E3%81%AEPlayground%E3%82%92%E4%BD%9C%E3%82%8B/Docker%E3%81%A7PostgreSQL%E3%81%AEPlayground%E3%82%92%E4%BD%9C%E3%82%8B/</guid>
      <description>最近PostgreSQLを触ることが多いため、サクッと遊べるようにDockerで作成してみた。 Dockerfile FROM postgres:14.5-bullseye RUN localedef -i ja_JP -c -f UTF-8 -A /usr/share/locale/locale.alias ja_JP.UTF-8 ENV LANG ja_JP.UTF-8 docker-compose.yml version: &amp;#39;3&amp;#39; services: db: build: ./</description>
    </item>
    
    <item>
      <title>vmstatで日付入りのリソース情報をファイルに出力する</title>
      <link>https://szk302.dev/posts/vmstat%E3%81%A7%E6%97%A5%E4%BB%98%E5%85%A5%E3%82%8A%E3%81%AE%E3%83%AA%E3%82%BD%E3%83%BC%E3%82%B9%E6%83%85%E5%A0%B1%E3%82%92%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%AB%E5%87%BA%E5%8A%9B%E3%81%99%E3%82%8B/</link>
      <pubDate>Wed, 31 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://szk302.dev/posts/vmstat%E3%81%A7%E6%97%A5%E4%BB%98%E5%85%A5%E3%82%8A%E3%81%AE%E3%83%AA%E3%82%BD%E3%83%BC%E3%82%B9%E6%83%85%E5%A0%B1%E3%82%92%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%AB%E5%87%BA%E5%8A%9B%E3%81%99%E3%82%8B/</guid>
      <description>vmstatでリソースの情報を日付入りでファイルに出力する 方法1 awkで先頭に日付を付与しファイル出力 Note awkがバッファするためflush(</description>
    </item>
    
    <item>
      <title>CloudWatchSyntheticsでHostとIPを紐づけてURL監視を行う</title>
      <link>https://szk302.dev/posts/CloudWatchSynthetics%E3%81%A7Host%E3%81%A8IP%E3%82%92%E7%B4%90%E3%81%A5%E3%81%91%E3%81%A6URL%E7%9B%A3%E8%A6%96%E3%82%92%E8%A1%8C%E3%81%86/</link>
      <pubDate>Wed, 31 Aug 2022 08:54:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/CloudWatchSynthetics%E3%81%A7Host%E3%81%A8IP%E3%82%92%E7%B4%90%E3%81%A5%E3%81%91%E3%81%A6URL%E7%9B%A3%E8%A6%96%E3%82%92%E8%A1%8C%E3%81%86/</guid>
      <description>CloudWatch SyntheticsでHostとIPを紐づけてURL監視を行う。 以下の条件でURL監視したいとのことなので調査 マネージドサービスがいい 名前</description>
    </item>
    
    <item>
      <title>watchを使用してバックグラウンドでコマンドを定期実行する</title>
      <link>https://szk302.dev/posts/watch%E3%82%92%E4%BD%BF%E7%94%A8%E3%81%97%E3%81%A6%E3%83%90%E3%83%83%E3%82%AF%E3%82%B0%E3%83%A9%E3%82%A6%E3%83%B3%E3%83%89%E3%81%A7%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89%E3%82%92%E5%AE%9A%E6%9C%9F%E5%AE%9F%E8%A1%8C%E3%81%99%E3%82%8B/</link>
      <pubDate>Tue, 30 Aug 2022 09:00:00 +0000</pubDate>
      
      <guid>https://szk302.dev/posts/watch%E3%82%92%E4%BD%BF%E7%94%A8%E3%81%97%E3%81%A6%E3%83%90%E3%83%83%E3%82%AF%E3%82%B0%E3%83%A9%E3%82%A6%E3%83%B3%E3%83%89%E3%81%A7%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89%E3%82%92%E5%AE%9A%E6%9C%9F%E5%AE%9F%E8%A1%8C%E3%81%99%E3%82%8B/</guid>
      <description>jstackでスレッドダンプを定期的に取得するために調査 方法 OUTPUT_DIR=&amp;#34;/tmp/output&amp;#34; JAVA_PID=1 INTERVAL=30 nohup watch -n &amp;#34;${INTERVAL}&amp;#34; &amp;#34;su - tomcat -c \&amp;#34;jstack -l ${JAVA_PID} &amp;gt;&amp;gt; /work/output/threaddump.\$(date +%F-%H%M%S)\&amp;#34;&amp;#34; &amp;amp;&amp;gt; /dev/null &amp;amp; 参考 WATCH</description>
    </item>
    
    <item>
      <title>別ユーザで動作しているtomcatのスレッドダンプを取る</title>
      <link>https://szk302.dev/posts/%E5%88%A5%E3%83%A6%E3%83%BC%E3%82%B6%E3%81%A7%E5%8B%95%E4%BD%9C%E3%81%97%E3%81%A6%E3%81%84%E3%82%8Btomcat%E3%81%AE%E3%82%B9%E3%83%AC%E3%83%83%E3%83%89%E3%83%80%E3%83%B3%E3%83%97%E3%82%92%E5%8F%96%E3%82%8B/</link>
      <pubDate>Tue, 30 Aug 2022 07:32:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/%E5%88%A5%E3%83%A6%E3%83%BC%E3%82%B6%E3%81%A7%E5%8B%95%E4%BD%9C%E3%81%97%E3%81%A6%E3%81%84%E3%82%8Btomcat%E3%81%AE%E3%82%B9%E3%83%AC%E3%83%83%E3%83%89%E3%83%80%E3%83%B3%E3%83%97%E3%82%92%E5%8F%96%E3%82%8B/</guid>
      <description>ECSExecでコンテナに入りjstackでスレッドダンプを取ろうとしたところ以下のエラーが発生。 Unable to open socket file /proc/81/root/tmp/.java_pid81: target process 81 dosen’t responde within 10500ms or HotSpot</description>
    </item>
    
    <item>
      <title>AWSCLIとJQで一時的な認証情報をkey=value形式で取得する</title>
      <link>https://szk302.dev/posts/AWSCLI%E3%81%A8JQ%E3%81%A7%E4%B8%80%E6%99%82%E7%9A%84%E3%81%AA%E8%AA%8D%E8%A8%BC%E6%83%85%E5%A0%B1%E3%82%92keyvalue%E5%BD%A2%E5%BC%8F%E3%81%A7%E5%8F%96%E5%BE%97%E3%81%99%E3%82%8B/</link>
      <pubDate>Mon, 29 Aug 2022 08:53:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/AWSCLI%E3%81%A8JQ%E3%81%A7%E4%B8%80%E6%99%82%E7%9A%84%E3%81%AA%E8%AA%8D%E8%A8%BC%E6%83%85%E5%A0%B1%E3%82%92keyvalue%E5%BD%A2%E5%BC%8F%E3%81%A7%E5%8F%96%E5%BE%97%E3%81%99%E3%82%8B/</guid>
      <description>方法 AWSCLIで取得してjqで加工して保存する。 コマンドの実行はすべてコマンドプロンプトで実行するよう。 結果はそれぞれのシェルに貼り付ける</description>
    </item>
    
    <item>
      <title>yarn_v1でパッケージをオフラインインストールする</title>
      <link>https://szk302.dev/posts/yarn_v1%E3%81%A7%E3%83%91%E3%83%83%E3%82%B1%E3%83%BC%E3%82%B8%E3%82%92%E3%82%AA%E3%83%95%E3%83%A9%E3%82%A4%E3%83%B3%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E3%81%99%E3%82%8B/</link>
      <pubDate>Fri, 26 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://szk302.dev/posts/yarn_v1%E3%81%A7%E3%83%91%E3%83%83%E3%82%B1%E3%83%BC%E3%82%B8%E3%82%92%E3%82%AA%E3%83%95%E3%83%A9%E3%82%A4%E3%83%B3%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E3%81%99%E3%82%8B/</guid>
      <description>yarnのv1を使用している環境でproxyを建てずオフラインインストールしたいという要望があったので調査。 環境 yarn: 1.22.19 方法 オフラインインストー</description>
    </item>
    
    <item>
      <title>AWSCLIで行うIAMロールの作成と削除</title>
      <link>https://szk302.dev/posts/AWSCLI%E3%81%A7%E8%A1%8C%E3%81%86IAM%E3%83%AD%E3%83%BC%E3%83%AB%E3%81%AE%E4%BD%9C%E6%88%90%E3%81%A8%E5%89%8A%E9%99%A4/AWSCLI%E3%81%A7%E8%A1%8C%E3%81%86IAM%E3%83%AD%E3%83%BC%E3%83%AB%E3%81%AE%E4%BD%9C%E6%88%90%E3%81%A8%E5%89%8A%E9%99%A4/</link>
      <pubDate>Thu, 04 Aug 2022 08:10:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/AWSCLI%E3%81%A7%E8%A1%8C%E3%81%86IAM%E3%83%AD%E3%83%BC%E3%83%AB%E3%81%AE%E4%BD%9C%E6%88%90%E3%81%A8%E5%89%8A%E9%99%A4/AWSCLI%E3%81%A7%E8%A1%8C%E3%81%86IAM%E3%83%AD%E3%83%BC%E3%83%AB%E3%81%AE%E4%BD%9C%E6%88%90%E3%81%A8%E5%89%8A%E9%99%A4/</guid>
      <description>テストで使用するのでサクッと作りたいというご要望 方法 作成 bash ROLE_NAME=&amp;#34;szk302-iam-role&amp;#34; aws iam create-role --role-name &amp;#34;${ROLE_NAME}&amp;#34; --assume-role-policy-document file://./ec2-assume-role-policy.json ec2-assume-role-policy.json { &amp;#34;Version&amp;#34;: &amp;#34;2012-10-17&amp;#34;, &amp;#34;Statement&amp;#34;: [ { &amp;#34;Effect&amp;#34;: &amp;#34;Allow&amp;#34;, &amp;#34;Action&amp;#34;: [ &amp;#34;sts:AssumeRole&amp;#34; ], &amp;#34;Principal&amp;#34;: { &amp;#34;Service&amp;#34;: [ &amp;#34;ec2.amazonaws.com&amp;#34; ] } } ] } jsonファイル使わ</description>
    </item>
    
    <item>
      <title>AWSCLIで行うIAMポリシーの作成と削除</title>
      <link>https://szk302.dev/posts/AWSCLI%E3%81%A7%E8%A1%8C%E3%81%86IAM%E3%83%9D%E3%83%AA%E3%82%B7%E3%83%BC%E3%81%AE%E4%BD%9C%E6%88%90%E3%81%A8%E5%89%8A%E9%99%A4/AWSCLI%E3%81%A7%E8%A1%8C%E3%81%86IAM%E3%83%9D%E3%83%AA%E3%82%B7%E3%83%BC%E3%81%AE%E4%BD%9C%E6%88%90%E3%81%A8%E5%89%8A%E9%99%A4/</link>
      <pubDate>Thu, 04 Aug 2022 08:10:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/AWSCLI%E3%81%A7%E8%A1%8C%E3%81%86IAM%E3%83%9D%E3%83%AA%E3%82%B7%E3%83%BC%E3%81%AE%E4%BD%9C%E6%88%90%E3%81%A8%E5%89%8A%E9%99%A4/AWSCLI%E3%81%A7%E8%A1%8C%E3%81%86IAM%E3%83%9D%E3%83%AA%E3%82%B7%E3%83%BC%E3%81%AE%E4%BD%9C%E6%88%90%E3%81%A8%E5%89%8A%E9%99%A4/</guid>
      <description>テストで使用するのでサクッと作りたいというご要望 方法 作成 bash POLICY_NAME=&amp;#34;szk302-iam-policy&amp;#34; aws iam create-policy --policy-name &amp;#34;${POLICY_NAME}&amp;#34; --policy-document file://./policy.json 表示 { &amp;#34;Version&amp;#34;: &amp;#34;2012-10-17&amp;#34;, &amp;#34;Statement&amp;#34;: [ { &amp;#34;Effect&amp;#34;: &amp;#34;Allow&amp;#34;, &amp;#34;Action&amp;#34;: [ &amp;#34;ec2:Describe*&amp;#34;, &amp;#34;iam:ListRoles&amp;#34;, &amp;#34;sts:AssumeRole&amp;#34; ], &amp;#34;Resource&amp;#34;: &amp;#34;*&amp;#34; } ] } jsonファイル使わない</description>
    </item>
    
    <item>
      <title>AWSCLIで行うS3Bucketの作成と削除と設定</title>
      <link>https://szk302.dev/posts/AWSCLI%E3%81%A7%E8%A1%8C%E3%81%86S3Bucket%E3%81%AE%E4%BD%9C%E6%88%90%E3%81%A8%E5%89%8A%E9%99%A4%E3%81%A8%E8%A8%AD%E5%AE%9A/</link>
      <pubDate>Thu, 04 Aug 2022 08:10:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/AWSCLI%E3%81%A7%E8%A1%8C%E3%81%86S3Bucket%E3%81%AE%E4%BD%9C%E6%88%90%E3%81%A8%E5%89%8A%E9%99%A4%E3%81%A8%E8%A8%AD%E5%AE%9A/</guid>
      <description>テストで使用するのでサクッと作りたいというご要望 方法 作成 bash BUCKET_NAME=&amp;#34;szk302.bucket&amp;#34; REGION=&amp;#34;ap-northeast-1&amp;#34; aws s3api create-bucket --bucket &amp;#34;${BUCKET_NAME}&amp;#34; --create-bucket-configuration &amp;#34;LocationConstraint=${REGION}&amp;#34; 削除 bash BUCKET_NAME=&amp;#34;szk302.bucket&amp;#34; aws s3api delete-bucket --bucket &amp;#34;${BUCKET_NAME}&amp;#34; Bucketを空にする bash BUCKET_NAME=&amp;#34;szk302.bucket&amp;#34; aws s3 rm &amp;#34;s3://${BUCKET_NAME}&amp;#34; --recursive 公開アクセ</description>
    </item>
    
    <item>
      <title>PowerShellでオブジェクトのプロパティを追加削除する</title>
      <link>https://szk302.dev/posts/PowerShell%E3%81%A7%E3%82%AA%E3%83%96%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%81%AE%E3%83%97%E3%83%AD%E3%83%91%E3%83%86%E3%82%A3%E3%82%92%E8%BF%BD%E5%8A%A0%E5%89%8A%E9%99%A4%E3%81%99%E3%82%8B/PowerShell%E3%81%A7%E3%82%AA%E3%83%96%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%81%AE%E3%83%97%E3%83%AD%E3%83%91%E3%83%86%E3%82%A3%E3%82%92%E8%BF%BD%E5%8A%A0%E5%89%8A%E9%99%A4%E3%81%99%E3%82%8B/</link>
      <pubDate>Thu, 14 Jul 2022 08:36:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/PowerShell%E3%81%A7%E3%82%AA%E3%83%96%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%81%AE%E3%83%97%E3%83%AD%E3%83%91%E3%83%86%E3%82%A3%E3%82%92%E8%BF%BD%E5%8A%A0%E5%89%8A%E9%99%A4%E3%81%99%E3%82%8B/PowerShell%E3%81%A7%E3%82%AA%E3%83%96%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%81%AE%E3%83%97%E3%83%AD%E3%83%91%E3%83%86%E3%82%A3%E3%82%92%E8%BF%BD%E5%8A%A0%E5%89%8A%E9%99%A4%E3%81%99%E3%82%8B/</guid>
      <description>Jsonを読み込んで加工したかったので調査 json.ps1 $INPUT_FILE_PATH=&amp;#34;sample.json&amp;#34; $OUTPUT_FILE_PATH=&amp;#34;sample_cp.json&amp;#34; # json読み込み $jsonObj=(Get-Content -Path &amp;#34;${INPUT_FILE_PATH}&amp;#34; -Encodin UTF8 -Raw | ConvertFrom-Json) # プロパティの追加 $jsonObj | Add-Member -MemberType NoteProperty -Name &amp;#39;Key3&amp;#39; -Value &amp;#39;Added Value&amp;#39; # プロパティの削除 $jsonObj.psobject.properties.remove(&amp;#39;Key2&amp;#39;)</description>
    </item>
    
    <item>
      <title>PowerShellでJSONを読み取りUTF-8のBOMなしでファイルに書き出す</title>
      <link>https://szk302.dev/posts/PowerShell%E3%81%A7Json%E3%82%92%E8%AA%AD%E3%81%BF%E5%8F%96%E3%82%8AUTF-8%E3%81%AEBOM%E3%81%AA%E3%81%97%E3%81%A7%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%AB%E6%9B%B8%E3%81%8D%E5%87%BA%E3%81%99/PowerShell%E3%81%A7Json%E3%82%92%E8%AA%AD%E3%81%BF%E5%8F%96%E3%82%8AUTF-8%E3%81%AEBOM%E3%81%AA%E3%81%97%E3%81%A7%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%AB%E6%9B%B8%E3%81%8D%E5%87%BA%E3%81%99/</link>
      <pubDate>Fri, 08 Jul 2022 19:10:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/PowerShell%E3%81%A7Json%E3%82%92%E8%AA%AD%E3%81%BF%E5%8F%96%E3%82%8AUTF-8%E3%81%AEBOM%E3%81%AA%E3%81%97%E3%81%A7%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%AB%E6%9B%B8%E3%81%8D%E5%87%BA%E3%81%99/PowerShell%E3%81%A7Json%E3%82%92%E8%AA%AD%E3%81%BF%E5%8F%96%E3%82%8AUTF-8%E3%81%AEBOM%E3%81%AA%E3%81%97%E3%81%A7%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%AB%E6%9B%B8%E3%81%8D%E5%87%BA%E3%81%99/</guid>
      <description>ConvertFrom-JsonでJSONからObjectにパースし、ConvertTo-JsonでJSONとしてBOMなしUTF-8でファ</description>
    </item>
    
    <item>
      <title>カレントディレクトリ以下に存在するあるディレクトリをすべて消したい</title>
      <link>https://szk302.dev/posts/%E3%82%AB%E3%83%AC%E3%83%B3%E3%83%88%E3%83%87%E3%82%A3%E3%83%AC%E3%82%AF%E3%83%88%E3%83%AA%E4%BB%A5%E4%B8%8B%E3%81%AB%E5%AD%98%E5%9C%A8%E3%81%99%E3%82%8B%E3%81%82%E3%82%8B%E3%83%87%E3%82%A3%E3%83%AC%E3%82%AF%E3%83%88%E3%83%AA%E3%82%92%E3%81%99%E3%81%B9%E3%81%A6%E6%B6%88%E3%81%97%E3%81%9F%E3%81%84/</link>
      <pubDate>Fri, 01 Jul 2022 08:11:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/%E3%82%AB%E3%83%AC%E3%83%B3%E3%83%88%E3%83%87%E3%82%A3%E3%83%AC%E3%82%AF%E3%83%88%E3%83%AA%E4%BB%A5%E4%B8%8B%E3%81%AB%E5%AD%98%E5%9C%A8%E3%81%99%E3%82%8B%E3%81%82%E3%82%8B%E3%83%87%E3%82%A3%E3%83%AC%E3%82%AF%E3%83%88%E3%83%AA%E3%82%92%E3%81%99%E3%81%B9%E3%81%A6%E6%B6%88%E3%81%97%E3%81%9F%E3%81%84/</guid>
      <description>ドライブ容量がギリギリになり容量を圧迫するnode_modulesを全部消したかったのでメモ 対応 findを使用してnode_modulesと</description>
    </item>
    
    <item>
      <title>AWSCodeBuildのプロジェクトをCLIでコピーする</title>
      <link>https://szk302.dev/posts/AWSCodeBuild%E3%81%AE%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%82%92CLI%E3%81%A7%E3%82%B3%E3%83%94%E3%83%BC%E3%81%99%E3%82%8B/</link>
      <pubDate>Thu, 30 Jun 2022 21:26:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/AWSCodeBuild%E3%81%AE%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%82%92CLI%E3%81%A7%E3%82%B3%E3%83%94%E3%83%BC%E3%81%99%E3%82%8B/</guid>
      <description>AWSCodeBuildのプロジェクトをコピーしたいという要望があったのでCLIで実施 方法 AWS CLIでプロジェクト設定を取得し、登録できる形に</description>
    </item>
    
    <item>
      <title>CloudflareWorkers上でWebCryptoAPIとjoseを使用してJWTの作成と検証をしてみる</title>
      <link>https://szk302.dev/posts/CloudflareWorkers%E4%B8%8A%E3%81%A7WebCryptoAPI%E3%81%A8jose%E3%82%92%E4%BD%BF%E7%94%A8%E3%81%97%E3%81%A6JWT%E3%81%AE%E4%BD%9C%E6%88%90%E3%81%A8%E6%A4%9C%E8%A8%BC%E3%82%92%E3%81%97%E3%81%A6%E3%81%BF%E3%82%8B/</link>
      <pubDate>Wed, 29 Jun 2022 08:58:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/CloudflareWorkers%E4%B8%8A%E3%81%A7WebCryptoAPI%E3%81%A8jose%E3%82%92%E4%BD%BF%E7%94%A8%E3%81%97%E3%81%A6JWT%E3%81%AE%E4%BD%9C%E6%88%90%E3%81%A8%E6%A4%9C%E8%A8%BC%E3%82%92%E3%81%97%E3%81%A6%E3%81%BF%E3%82%8B/</guid>
      <description>Cloudflare Workers上でWeb Crypto APIで公開鍵と秘密鍵を作成し、joseでJWTの作成と検証をしてみた。 import { Hono } from &amp;#34;hono&amp;#34;; import { RegExpRouter } from &amp;#34;hono/router/reg-exp-router&amp;#34;; import {SignJWT, jwtVerify} from &amp;#34;jose&amp;#34;; export const app</description>
    </item>
    
    <item>
      <title>Honoのサンプルプロジェクトでテストを通す</title>
      <link>https://szk302.dev/posts/Hono%E3%81%AE%E3%82%B5%E3%83%B3%E3%83%97%E3%83%AB%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%81%A7%E3%83%86%E3%82%B9%E3%83%88%E3%82%92%E9%80%9A%E3%81%99/</link>
      <pubDate>Mon, 27 Jun 2022 07:41:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/Hono%E3%81%AE%E3%82%B5%E3%83%B3%E3%83%97%E3%83%AB%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%81%A7%E3%83%86%E3%82%B9%E3%83%88%E3%82%92%E9%80%9A%E3%81%99/</guid>
      <description>前回以下のコマンドでサンプルプロジェクトを作成したが、そのままではテストが通らなかった。 また、全部のパスを通るテストを追加してみたがカバレッ</description>
    </item>
    
    <item>
      <title>CloudflareWorkersでHonoを試してみる</title>
      <link>https://szk302.dev/posts/CloudflareWorkers%E3%81%A7Hono%E3%82%92%E8%A9%A6%E3%81%97%E3%81%A6%E3%81%BF%E3%82%8B/</link>
      <pubDate>Sun, 26 Jun 2022 08:16:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/CloudflareWorkers%E3%81%A7Hono%E3%82%92%E8%A9%A6%E3%81%97%E3%81%A6%E3%81%BF%E3%82%8B/</guid>
      <description>プロジェクトの作成 console npx create-cloudflare sample-hono https://github.com/honojs/hono-minimal 以下、作成されたディレクトリ構造 console root@5ad01add5449:/workspace# tree sample-hono sample-hono |-- README.md |-- jest.config.js |-- package.json |-- src | |-- index.test.ts | `-- index.ts `-- wrangler.toml 依存モジュールをインストール console root@5ad01add5449:/workspace/sample-hono# npm i console</description>
    </item>
    
    <item>
      <title>AWSEC2にSSM経由でVSCodeのdevcontainerを使用する</title>
      <link>https://szk302.dev/posts/AWSEC2%E3%81%ABSSM%E7%B5%8C%E7%94%B1%E3%81%A7VSCode%E3%81%AEdevcontainer%E3%82%92%E4%BD%BF%E7%94%A8%E3%81%99%E3%82%8B/</link>
      <pubDate>Wed, 22 Jun 2022 19:39:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/AWSEC2%E3%81%ABSSM%E7%B5%8C%E7%94%B1%E3%81%A7VSCode%E3%81%AEdevcontainer%E3%82%92%E4%BD%BF%E7%94%A8%E3%81%99%E3%82%8B/</guid>
      <description>AWSのEC2に対してSessonManager経由で接続しdevcontainerを使用したい。 環境 ローカル OS: Windows 10 Home VSCode: 1.68.1 AWS CLI: 2.4.18 Session Manager plugin: 1.2.295.0 リモ</description>
    </item>
    
    <item>
      <title>CloudflarePagesでビルド時にNodeのバージョンを指定する</title>
      <link>https://szk302.dev/posts/CloudflarePages%E3%81%A7%E3%83%93%E3%83%AB%E3%83%89%E6%99%82%E3%81%ABNode%E3%81%AE%E3%83%90%E3%83%BC%E3%82%B8%E3%83%A7%E3%83%B3%E3%82%92%E6%8C%87%E5%AE%9A%E3%81%99%E3%82%8B/</link>
      <pubDate>Sat, 18 Jun 2022 09:58:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/CloudflarePages%E3%81%A7%E3%83%93%E3%83%AB%E3%83%89%E6%99%82%E3%81%ABNode%E3%81%AE%E3%83%90%E3%83%BC%E3%82%B8%E3%83%A7%E3%83%B3%E3%82%92%E6%8C%87%E5%AE%9A%E3%81%99%E3%82%8B/</guid>
      <description>CloudflarePagesを利用してGatsbyビルド時に以下のエラーが発生した。 07:43:59.243 error gatsby@4.15.2: The engine &amp;#34;node&amp;#34; is incompatible with this module. Expected version &amp;#34;&amp;gt;=14.15.0&amp;#34;. Got &amp;#34;12.18.0&amp;#34; 07:43:59.253 error Found incompatible module. Cloudf</description>
    </item>
    
    <item>
      <title>devcontainerでGatsbyのTelemetryの表示をoffにする</title>
      <link>https://szk302.dev/posts/devcontainer%E3%81%A7Gatsby%E3%81%AETelemetry%E3%81%AE%E8%A1%A8%E7%A4%BA%E3%82%92off%E3%81%AB%E3%81%99%E3%82%8B/</link>
      <pubDate>Thu, 16 Jun 2022 07:50:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/devcontainer%E3%81%A7Gatsby%E3%81%AETelemetry%E3%81%AE%E8%A1%A8%E7%A4%BA%E3%82%92off%E3%81%AB%E3%81%99%E3%82%8B/</guid>
      <description>devcontainerでgatsbyを利用時にコンテナ再作成してから yarn start すると以下の表示がでる。 ╔════════════════════</description>
    </item>
    
    <item>
      <title>yarnでインストール済みのパッケージを確認する</title>
      <link>https://szk302.dev/posts/yarn%E3%81%A7%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E6%B8%88%E3%81%BF%E3%81%AE%E3%83%91%E3%83%83%E3%82%B1%E3%83%BC%E3%82%B8%E3%82%92%E7%A2%BA%E8%AA%8D%E3%81%99%E3%82%8B/</link>
      <pubDate>Tue, 14 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://szk302.dev/posts/yarn%E3%81%A7%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E6%B8%88%E3%81%BF%E3%81%AE%E3%83%91%E3%83%83%E3%82%B1%E3%83%BC%E3%82%B8%E3%82%92%E7%A2%BA%E8%AA%8D%E3%81%99%E3%82%8B/</guid>
      <description>環境 yarn: 1.22.19 方法 以下のコマンドで確認する yarn list --pattern &amp;#39;パッケージ名1|パッケージ名2&amp;#39; &amp;gt; yarn list --pattern &amp;#39;@aws-sdk/client-s3|@aws-sdk/s3-request-presigner&amp;#39; yarn list v1.22.19 ├─ @aws-sdk/client-s3@3.107.0 └─ @aws-sdk/s3-request-presigner@3.107.0 Done in 1.16s. 参考 yarn list</description>
    </item>
    
    <item>
      <title>AWSSDKJavaScriptV3でBackblazeB2のpresignedURLを作成する</title>
      <link>https://szk302.dev/posts/AWSSDKJavaScriptV3%E3%81%A7BackblazeB2%E3%81%AEpresignedURL%E3%82%92%E4%BD%9C%E6%88%90%E3%81%99%E3%82%8B/</link>
      <pubDate>Tue, 14 Jun 2022 08:39:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/AWSSDKJavaScriptV3%E3%81%A7BackblazeB2%E3%81%AEpresignedURL%E3%82%92%E4%BD%9C%E6%88%90%E3%81%99%E3%82%8B/</guid>
      <description>v2での作り方は転がってるが、v3での作り方がわからず若干ハマったのでメモ パッケージインストール yarn add @aws-sdk/client-s3 @aws-sdk/s3-request-presigner 環境 &amp;gt;yarn list --pattern @aws-sdk/client-s3 @aws-sdk/s3-request-presigner yarn list v1.22.19 warning Filtering by arguments is deprecated. Please use</description>
    </item>
    
    <item>
      <title>Gatsbyでtsxファイルのホットリロードが効かない</title>
      <link>https://szk302.dev/posts/Gatsby%E3%81%A7tsx%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%AE%E3%83%9B%E3%83%83%E3%83%88%E3%83%AA%E3%83%AD%E3%83%BC%E3%83%89%E3%81%8C%E5%8A%B9%E3%81%8B%E3%81%AA%E3%81%84/</link>
      <pubDate>Thu, 09 Jun 2022 07:33:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/Gatsby%E3%81%A7tsx%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%AE%E3%83%9B%E3%83%83%E3%83%88%E3%83%AA%E3%83%AD%E3%83%BC%E3%83%89%E3%81%8C%E5%8A%B9%E3%81%8B%E3%81%AA%E3%81%84/</guid>
      <description>Gatsbyのプロジェクトを新規作成したところ、tsxファイルを編集してもホットリロードが効かない。 2.X.X時代のプロジェクトでは効いてい</description>
    </item>
    
    <item>
      <title>PowerShellでファイルやディレクトリの存在チェック</title>
      <link>https://szk302.dev/posts/PowerShell%E3%81%A7%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%84%E3%83%87%E3%82%A3%E3%83%AC%E3%82%AF%E3%83%88%E3%83%AA%E3%81%AE%E5%AD%98%E5%9C%A8%E3%83%81%E3%82%A7%E3%83%83%E3%82%AF/</link>
      <pubDate>Sun, 05 Jun 2022 20:20:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/PowerShell%E3%81%A7%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%84%E3%83%87%E3%82%A3%E3%83%AC%E3%82%AF%E3%83%88%E3%83%AA%E3%81%AE%E5%AD%98%E5%9C%A8%E3%83%81%E3%82%A7%E3%83%83%E3%82%AF/</guid>
      <description>Test-Path を使用する。 存在するか確認 $file_path = &amp;#34;test.txt&amp;#34;; if(Test-Path $file_path) { echo &amp;#34;存在する&amp;#34;; }; 存在しないか確認 $file_path = &amp;#34;test.txt&amp;#34;; if((Test-Path $file_path) -ne &amp;#34;True&amp;#34;) { echo &amp;#34;存在しない&amp;#34;;</description>
    </item>
    
    <item>
      <title>PowerShellでファイルやフォルダを削除する</title>
      <link>https://szk302.dev/posts/PowerShell%E3%81%A7%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%84%E3%83%95%E3%82%A9%E3%83%AB%E3%83%80%E3%82%92%E5%89%8A%E9%99%A4%E3%81%99%E3%82%8B/</link>
      <pubDate>Sun, 05 Jun 2022 16:50:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/PowerShell%E3%81%A7%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%84%E3%83%95%E3%82%A9%E3%83%AB%E3%83%80%E3%82%92%E5%89%8A%E9%99%A4%E3%81%99%E3%82%8B/</guid>
      <description>方法 オプション -Recurse,-Force をつける -Recurse サブディレクトリごと削除 -Force 隠しファイルや読み取り専用ファイルを削除 Remove-Item xyz -Recurse -Force ただし、ファイルやディレクトリが存在しな</description>
    </item>
    
    <item>
      <title>AWSCLIでAmazon公式の日本語版WindowsServerAMIの情報を取得する</title>
      <link>https://szk302.dev/posts/AWSCLI%E3%81%A7Amazon%E5%85%AC%E5%BC%8F%E3%81%AE%E6%97%A5%E6%9C%AC%E8%AA%9E%E7%89%88WindowsServerAMI%E3%81%AE%E6%83%85%E5%A0%B1%E3%82%92%E5%8F%96%E5%BE%97%E3%81%99%E3%82%8B/</link>
      <pubDate>Sun, 05 Jun 2022 16:23:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/AWSCLI%E3%81%A7Amazon%E5%85%AC%E5%BC%8F%E3%81%AE%E6%97%A5%E6%9C%AC%E8%AA%9E%E7%89%88WindowsServerAMI%E3%81%AE%E6%83%85%E5%A0%B1%E3%82%92%E5%8F%96%E5%BE%97%E3%81%99%E3%82%8B/</guid>
      <description>いつも日本語版AMIを探し回るのでメモ 方法 フィルター部分のOSのバージョン(年)を変えれば対象バージョンの最新のAMIが取得できる cmd aws ec2 describe-images --region</description>
    </item>
    
    <item>
      <title>WindowsにPowerShellでサクラエディタをサイレントインストールする</title>
      <link>https://szk302.dev/posts/Windows%E3%81%ABPowerShell%E3%81%A7%E3%82%B5%E3%82%AF%E3%83%A9%E3%82%A8%E3%83%87%E3%82%A3%E3%82%BF%E3%82%92%E3%82%B5%E3%82%A4%E3%83%AC%E3%83%B3%E3%83%88%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E3%81%99%E3%82%8B/</link>
      <pubDate>Sun, 05 Jun 2022 09:07:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/Windows%E3%81%ABPowerShell%E3%81%A7%E3%82%B5%E3%82%AF%E3%83%A9%E3%82%A8%E3%83%87%E3%82%A3%E3%82%BF%E3%82%92%E3%82%B5%E3%82%A4%E3%83%AC%E3%83%B3%E3%83%88%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E3%81%99%E3%82%8B/</guid>
      <description>chocolateyやwingetが使用禁止のためpowershellでインストールする install_sakura.ps1 $INSTALLER_FILE_NAME = &amp;#34;sakura_installer.exe&amp;#34;; $INSTALLER_ZIP_FILE_NAME = &amp;#34;sakura_installer.zip&amp;#34; $INSTALLER_URL = &amp;#34;https://github.com/sakura-editor/sakura/releases/download/v2.4.1/sakura-tag-v2.4.1-build2849-ee8234f-Win32-Release-Installer.zip&amp;#34; $current_dir_path = $PSScriptRoot; $tmp_dir_path = &amp;#34;$env:TEMP/&amp;#34; + (Get-Date).ToString(&amp;#34;yyyyMMdd_HHmmssfff&amp;#34;); New-Item &amp;#34;${tmp_dir_path}&amp;#34; -ItemType Directory Invoke-WebRequest &amp;#34;${INSTALLER_URL}&amp;#34; -OutFile ${tmp_dir_path}/${INSTALLER_ZIP_FILE_NAME};</description>
    </item>
    
    <item>
      <title>WindowsにPowerShellでVSCodeをサイレントインストールする</title>
      <link>https://szk302.dev/posts/Windows%E3%81%ABPowerShell%E3%81%A7VSCode%E3%82%92%E3%82%B5%E3%82%A4%E3%83%AC%E3%83%B3%E3%83%88%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E3%81%99%E3%82%8B/</link>
      <pubDate>Sun, 05 Jun 2022 08:49:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/Windows%E3%81%ABPowerShell%E3%81%A7VSCode%E3%82%92%E3%82%B5%E3%82%A4%E3%83%AC%E3%83%B3%E3%83%88%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E3%81%99%E3%82%8B/</guid>
      <description>chocolateyやwingetが使用禁止のためpowershellでインストールする install_vscode.ps1 $INSTALLER_FILE_NAME = &amp;#34;vscode_installer.exe&amp;#34;; $INSTALLER_VERSION = &amp;#34;latest&amp;#34;; $current_dir_path = $PSScriptRoot; $tmp_dir_path = &amp;#34;$env:TEMP/&amp;#34; + (Get-Date).ToString(&amp;#34;yyyyMMdd_HHmmssfff&amp;#34;); $installer_file_path = &amp;#34;${tmp_dir_path}/${INSTALLER_FILE_NAME}&amp;#34; New-Item -ItemType Directory ${tmp_dir_path}; Invoke-WebRequest &amp;#34;https://update.code.visualstudio.com/${INSTALLER_VERSION}/win32-x64/stable&amp;#34; -OutFile ${installer_file_path};</description>
    </item>
    
    <item>
      <title>A5M2で作成したSQLをA5M2cmdでコマンドラインから実行する</title>
      <link>https://szk302.dev/posts/A5M2%E3%81%A7%E4%BD%9C%E6%88%90%E3%81%97%E3%81%9FSQL%E3%82%92A5M2cmd%E3%81%A7%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89%E3%83%A9%E3%82%A4%E3%83%B3%E3%81%8B%E3%82%89%E5%AE%9F%E8%A1%8C%E3%81%99%E3%82%8B/</link>
      <pubDate>Mon, 30 May 2022 08:14:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/A5M2%E3%81%A7%E4%BD%9C%E6%88%90%E3%81%97%E3%81%9FSQL%E3%82%92A5M2cmd%E3%81%A7%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89%E3%83%A9%E3%82%A4%E3%83%B3%E3%81%8B%E3%82%89%E5%AE%9F%E8%A1%8C%E3%81%99%E3%82%8B/</guid>
      <description>A5M2で生成されたSQLをコマンドラインから実行する。 実行方法はコマンドラインツールのzipを解凍すると一緒に入っているa5m2cmd.j</description>
    </item>
    
    <item>
      <title>AWSのALBのアクセスログがS3に出力されない</title>
      <link>https://szk302.dev/posts/AWS%E3%81%AEALB%E3%81%AE%E3%82%A2%E3%82%AF%E3%82%BB%E3%82%B9%E3%83%AD%E3%82%B0%E3%81%8CS3%E3%81%AB%E5%87%BA%E5%8A%9B%E3%81%95%E3%82%8C%E3%81%AA%E3%81%84/</link>
      <pubDate>Sun, 29 May 2022 10:01:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/AWS%E3%81%AEALB%E3%81%AE%E3%82%A2%E3%82%AF%E3%82%BB%E3%82%B9%E3%83%AD%E3%82%B0%E3%81%8CS3%E3%81%AB%E5%87%BA%E5%8A%9B%E3%81%95%E3%82%8C%E3%81%AA%E3%81%84/</guid>
      <description>S3のポリシー見直しをしていたところ、ALBのログがS3に出力されなくなった。 ALBのログ出力に指定するバケットのポリシーのPrincipa</description>
    </item>
    
    <item>
      <title>AWSCLIを使用してAmazonSESのバウンス用シミュレーターを使用する</title>
      <link>https://szk302.dev/posts/AWSCLI%E3%82%92%E4%BD%BF%E7%94%A8%E3%81%97%E3%81%A6AmazonSES%E3%81%AE%E3%83%90%E3%82%A6%E3%83%B3%E3%82%B9%E7%94%A8%E3%82%B7%E3%83%9F%E3%83%A5%E3%83%AC%E3%83%BC%E3%82%BF%E3%83%BC%E3%82%92%E4%BD%BF%E7%94%A8%E3%81%99%E3%82%8B/</link>
      <pubDate>Thu, 26 May 2022 08:17:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/AWSCLI%E3%82%92%E4%BD%BF%E7%94%A8%E3%81%97%E3%81%A6AmazonSES%E3%81%AE%E3%83%90%E3%82%A6%E3%83%B3%E3%82%B9%E7%94%A8%E3%82%B7%E3%83%9F%E3%83%A5%E3%83%AC%E3%83%BC%E3%82%BF%E3%83%BC%E3%82%92%E4%BD%BF%E7%94%A8%E3%81%99%E3%82%8B/</guid>
      <description>メールのバウンス処理をテストする必要があったのでメモ AWS CLIを使用してバウンスをシミュレートするメールアドレスに対してメールを送信する fromMailAddress=sample@szk302.dev aws ses</description>
    </item>
    
    <item>
      <title>Java11でHeapメモリのサイズを指定する</title>
      <link>https://szk302.dev/posts/Java11%E3%81%A7Heap%E3%83%A1%E3%83%A2%E3%83%AA%E3%81%AE%E3%82%B5%E3%82%A4%E3%82%BA%E3%82%92%E6%8C%87%E5%AE%9A%E3%81%99%E3%82%8B/</link>
      <pubDate>Sat, 14 May 2022 09:59:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/Java11%E3%81%A7Heap%E3%83%A1%E3%83%A2%E3%83%AA%E3%81%AE%E3%82%B5%E3%82%A4%E3%82%BA%E3%82%92%E6%8C%87%E5%AE%9A%E3%81%99%E3%82%8B/</guid>
      <description>Java11のHeapメモリサイズを指定しようとしたらいつの間にか%で指定できるようになっていた。 以下のオプションが関連してくるようだが、使</description>
    </item>
    
    <item>
      <title>CorrettoECRコンテナ内でps,vmstat,freeを実行する</title>
      <link>https://szk302.dev/posts/CorrettoECR%E3%82%B3%E3%83%B3%E3%83%86%E3%83%8A%E3%81%A7psvmstatfree%E3%82%92%E5%AE%9F%E8%A1%8C%E3%81%99%E3%82%8B/</link>
      <pubDate>Fri, 13 May 2022 08:38:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/CorrettoECR%E3%82%B3%E3%83%B3%E3%83%86%E3%83%8A%E3%81%A7psvmstatfree%E3%82%92%E5%AE%9F%E8%A1%8C%E3%81%99%E3%82%8B/</guid>
      <description>コンテナ内からメモリ使用率を確認したかったが必要なコマンドが存在しなかったため、インストール 対応 Dockerfileに以下を追記 RUN yum install -y procps 参</description>
    </item>
    
    <item>
      <title>JMeterのインストール</title>
      <link>https://szk302.dev/posts/JMeter%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB/</link>
      <pubDate>Fri, 13 May 2022 07:48:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/JMeter%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB/</guid>
      <description>JMeterをインストールして日本語化する 環境 OS Microsoft Windows 10 JAVA openjdk 11.0.15 2022-04-19 LTS インストール 以下のページからJMeterをダウンロード(今回はapache-</description>
    </item>
    
    <item>
      <title>PowerShellでFargateコンテナ内のbashを実行する</title>
      <link>https://szk302.dev/posts/PowerShell%E3%81%A7Fargate%E3%82%B3%E3%83%B3%E3%83%86%E3%83%8A%E5%86%85%E3%81%AEbash%E3%82%92%E5%AE%9F%E8%A1%8C%E3%81%99%E3%82%8B/</link>
      <pubDate>Fri, 22 Apr 2022 08:33:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/PowerShell%E3%81%A7Fargate%E3%82%B3%E3%83%B3%E3%83%86%E3%83%8A%E5%86%85%E3%81%AEbash%E3%82%92%E5%AE%9F%E8%A1%8C%E3%81%99%E3%82%8B/</guid>
      <description>PowerShellからAWS CLIを使用してタスクIDを取得し、ECSExecを使用してbashを実行する 前提条件 1サービス1コンテナを想</description>
    </item>
    
    <item>
      <title>SpringBootのapplication.propertiesに使用できる文字コードはISO8859-1形式</title>
      <link>https://szk302.dev/posts/SpringBoot%E3%81%AEapplication.properties%E3%81%AB%E4%BD%BF%E7%94%A8%E3%81%A7%E3%81%8D%E3%82%8B%E6%96%87%E5%AD%97%E3%82%B3%E3%83%BC%E3%83%89%E3%81%AFISO8859-1%E5%BD%A2%E5%BC%8F/</link>
      <pubDate>Wed, 13 Apr 2022 22:07:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/SpringBoot%E3%81%AEapplication.properties%E3%81%AB%E4%BD%BF%E7%94%A8%E3%81%A7%E3%81%8D%E3%82%8B%E6%96%87%E5%AD%97%E3%82%B3%E3%83%BC%E3%83%89%E3%81%AFISO8859-1%E5%BD%A2%E5%BC%8F/</guid>
      <description>application.propertiesに日本語文字列を定義していて、プレースホルダーで環境変数から取得するようにしたらエラーになったの</description>
    </item>
    
    <item>
      <title>AmazonECSのタスク定義に指定されている環境変数をkey=value形式で出力する</title>
      <link>https://szk302.dev/posts/AmazonECS%E3%81%AE%E3%82%BF%E3%82%B9%E3%82%AF%E5%AE%9A%E7%BE%A9%E3%81%AB%E6%8C%87%E5%AE%9A%E3%81%95%E3%82%8C%E3%81%A6%E3%81%84%E3%82%8B%E7%92%B0%E5%A2%83%E5%A4%89%E6%95%B0%E3%82%92keyvalue%E5%BD%A2%E5%BC%8F%E3%81%A7%E5%87%BA%E5%8A%9B%E3%81%99%E3%82%8B/</link>
      <pubDate>Sun, 10 Apr 2022 14:21:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/AmazonECS%E3%81%AE%E3%82%BF%E3%82%B9%E3%82%AF%E5%AE%9A%E7%BE%A9%E3%81%AB%E6%8C%87%E5%AE%9A%E3%81%95%E3%82%8C%E3%81%A6%E3%81%84%E3%82%8B%E7%92%B0%E5%A2%83%E5%A4%89%E6%95%B0%E3%82%92keyvalue%E5%BD%A2%E5%BC%8F%E3%81%A7%E5%87%BA%E5%8A%9B%E3%81%99%E3%82%8B/</guid>
      <description>AmazonECSのタスク定義に指定されている環境変数をkey=value形式で出力したい 方法 AWS CLIとjqを使用して加工する cmd aws ecs describe-task-definition --task-definition タス</description>
    </item>
    
    <item>
      <title>AmazonECSのタスク定義をコピーする</title>
      <link>https://szk302.dev/posts/AmazonECS%E3%81%AE%E3%82%BF%E3%82%B9%E3%82%AF%E5%AE%9A%E7%BE%A9%E3%82%92%E3%82%B3%E3%83%94%E3%83%BC%E3%81%99%E3%82%8B/</link>
      <pubDate>Sun, 10 Apr 2022 14:21:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/AmazonECS%E3%81%AE%E3%82%BF%E3%82%B9%E3%82%AF%E5%AE%9A%E7%BE%A9%E3%82%92%E3%82%B3%E3%83%94%E3%83%BC%E3%81%99%E3%82%8B/</guid>
      <description>AmazonECSのタスク定義をコピーして別のタスク定義を作成したい。 CLIからタスク定義を取得し、別のタスク定義として保存する 方法 AWS CLI</description>
    </item>
    
    <item>
      <title>AWSCLIでSecretsManagerに設定したシークレット値を取得する</title>
      <link>https://szk302.dev/posts/AWSCLI%E3%81%A7SecretsManager%E3%81%AB%E8%A8%AD%E5%AE%9A%E3%81%97%E3%81%9F%E3%82%B7%E3%83%BC%E3%82%AF%E3%83%AC%E3%83%83%E3%83%88%E5%80%A4%E3%82%92%E5%8F%96%E5%BE%97%E3%81%99%E3%82%8B/</link>
      <pubDate>Wed, 06 Apr 2022 07:56:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/AWSCLI%E3%81%A7SecretsManager%E3%81%AB%E8%A8%AD%E5%AE%9A%E3%81%97%E3%81%9F%E3%82%B7%E3%83%BC%E3%82%AF%E3%83%AC%E3%83%83%E3%83%88%E5%80%A4%E3%82%92%E5%8F%96%E5%BE%97%E3%81%99%E3%82%8B/</guid>
      <description>方法 AWSCLIで取得してjqで取り出す SecretsManager(/secret/rds/app) { &amp;#34;spring.datasource.username&amp;#34;: &amp;#34;app&amp;#34;, &amp;#34;spring.datasource.password&amp;#34;: &amp;#34;P@ssw0rd!!&amp;#34; } cmd aws secretsmanager get-secret-value --secret-id /secret/rds/app | jq -r &amp;#34;.SecretString | fromjson | .[\&amp;#34;spring.datasource.password\&amp;#34;]&amp;#34; powershell aws secretsmanager get-secret-value --secret-id /secret/rds/app | jq -r &amp;#34;.SecretString | fromjson | .[\&amp;#34;&amp;#34;spring.datasource.password\&amp;#34;&amp;#34;]&amp;#34; 参考 チュートリアル: シークレッ</description>
    </item>
    
    <item>
      <title>curlでレスポンスのHTTPステータスとbodyを取得する</title>
      <link>https://szk302.dev/posts/curl%E3%81%A7%E3%83%AC%E3%82%B9%E3%83%9D%E3%83%B3%E3%82%B9%E3%81%AEHTTP%E3%82%B9%E3%83%86%E3%83%BC%E3%82%BF%E3%82%B9%E3%81%A8body%E3%82%92%E5%8F%96%E5%BE%97%E3%81%99%E3%82%8B/</link>
      <pubDate>Tue, 05 Apr 2022 08:10:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/curl%E3%81%A7%E3%83%AC%E3%82%B9%E3%83%9D%E3%83%B3%E3%82%B9%E3%81%AEHTTP%E3%82%B9%E3%83%86%E3%83%BC%E3%82%BF%E3%82%B9%E3%81%A8body%E3%82%92%E5%8F%96%E5%BE%97%E3%81%99%E3%82%8B/</guid>
      <description>curlで実行時のレスポンスHTTPステータスとBodyを取得したい 方法 /get_https-status_body.sh #!/bin/bash response=$(curl -w &amp;#39;\n%{http_code}&amp;#39; -sL --url https://szk302.dev) echo &amp;#34;status: ${response: -3}&amp;#34; echo &amp;#34;body: ${response:0:-3}&amp;#34; 結果 console status: 200 body: &amp;lt;!doctype html&amp;gt;&amp;lt;html lang=ja dir=auto&amp;gt;&amp;lt;head&amp;gt;&amp;lt;meta name=generator content=&amp;#34;Hugo 0.80.0&amp;</description>
    </item>
    
    <item>
      <title>シェルスクリプトで実行したコマンド実行時間(ms)を計測する</title>
      <link>https://szk302.dev/posts/%E3%82%B7%E3%82%A7%E3%83%AB%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%97%E3%83%88%E3%81%A7%E5%AE%9F%E8%A1%8C%E3%81%97%E3%81%9F%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89%E5%AE%9F%E8%A1%8C%E6%99%82%E9%96%93%E3%82%92%E8%A8%88%E6%B8%AC%E3%81%99%E3%82%8B/</link>
      <pubDate>Tue, 05 Apr 2022 07:07:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/%E3%82%B7%E3%82%A7%E3%83%AB%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%97%E3%83%88%E3%81%A7%E5%AE%9F%E8%A1%8C%E3%81%97%E3%81%9F%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89%E5%AE%9F%E8%A1%8C%E6%99%82%E9%96%93%E3%82%92%E8%A8%88%E6%B8%AC%E3%81%99%E3%82%8B/</guid>
      <description>コマンド呼び出しにかかった時間を計測したい ./time.sh #!/bin/bash startTime=$(date +&amp;#34;%s%3N&amp;#34;) sleep 1 response=$(curl -w &amp;#39;\n%{http_code}&amp;#39; -sL --request GET --url https://szk302.dev) endTime=$(date +&amp;#34;%s%3N&amp;#34;) elapsedTime=$((endTime - startTime)) elapsedTimeSeconds=$(bc &amp;lt;&amp;lt;&amp;lt; &amp;#34;scale=3; $elapsedTime/1000&amp;#34;) echo &amp;#34;elapsedTime(ms):${elapsedTime}&amp;#34; echo &amp;#34;elapsedTime(s):${elapsedTimeSeconds}&amp;#34; 結果 console elapsedTime(ms):1109 elapsedTime(s):1.109 参考 21.1.1 Time conversion specifiers date コマンドで日時のミリ</description>
    </item>
    
    <item>
      <title>Bashの変数展開で0埋めする</title>
      <link>https://szk302.dev/posts/Bash%E3%81%AE%E5%A4%89%E6%95%B0%E5%B1%95%E9%96%8B%E3%81%A70%E5%9F%8B%E3%82%81%E3%81%99%E3%82%8B/</link>
      <pubDate>Wed, 30 Mar 2022 08:55:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/Bash%E3%81%AE%E5%A4%89%E6%95%B0%E5%B1%95%E9%96%8B%E3%81%A70%E5%9F%8B%E3%82%81%E3%81%99%E3%82%8B/</guid>
      <description>変数展開を使用して0埋めする 左 左側0埋めコード #!/bin/bash for i in {1..3}; do number=&amp;#34;000${i}&amp;#34; echo &amp;#34;${number: -3}&amp;#34; done Note -3の前にスペースを置く 結果 001 002 003 右 右側0埋めコード #!/bin/bash for i in {1..3}; do number=&amp;#34;${i}000&amp;#34; echo &amp;#34;${number::3}&amp;#34;</description>
    </item>
    
    <item>
      <title>PowershellでTCP接続できるまで待つ</title>
      <link>https://szk302.dev/posts/Powershell%E3%81%A7TCP%E6%8E%A5%E7%B6%9A%E3%81%A7%E3%81%8D%E3%82%8B%E3%81%BE%E3%81%A7%E5%BE%85%E3%81%A4/</link>
      <pubDate>Wed, 16 Mar 2022 08:42:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/Powershell%E3%81%A7TCP%E6%8E%A5%E7%B6%9A%E3%81%A7%E3%81%8D%E3%82%8B%E3%81%BE%E3%81%A7%E5%BE%85%E3%81%A4/</guid>
      <description>PowershellでTCP接続可能になるまで待ちたい wait.ps1 $dstHost = &amp;#39;szk302.dev&amp;#39; $dstPort = 443 $maxRetryCount = 2 $count = 0 while (-not (Test-NetConnection -ComputerName $dstHost -Port $dstPort -InformationLevel Quiet) -and ($count -lt $maxRetryCount)) { Write-Host &amp;#34;Retry NetConnection&amp;#34; $count+=1 } 参考 loop until IP:port is responding</description>
    </item>
    
    <item>
      <title>CloudFormationのテンプレートコーディングをVSCodeのRemoteDevelopmentを利用してコンテナ内で行う</title>
      <link>https://szk302.dev/posts/CloudFormation%E3%81%AE%E3%83%86%E3%83%B3%E3%83%97%E3%83%AC%E3%83%BC%E3%83%88%E3%82%B3%E3%83%BC%E3%83%87%E3%82%A3%E3%83%B3%E3%82%B0%E3%82%92VSCode%E3%81%AERemoteDevelopment%E3%82%92%E5%88%A9%E7%94%A8%E3%81%97%E3%81%A6%E3%82%B3%E3%83%B3%E3%83%86%E3%83%8A%E5%86%85%E3%81%A7%E8%A1%8C%E3%81%86/</link>
      <pubDate>Sat, 12 Mar 2022 13:08:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/CloudFormation%E3%81%AE%E3%83%86%E3%83%B3%E3%83%97%E3%83%AC%E3%83%BC%E3%83%88%E3%82%B3%E3%83%BC%E3%83%87%E3%82%A3%E3%83%B3%E3%82%B0%E3%82%92VSCode%E3%81%AERemoteDevelopment%E3%82%92%E5%88%A9%E7%94%A8%E3%81%97%E3%81%A6%E3%82%B3%E3%83%B3%E3%83%86%E3%83%8A%E5%86%85%E3%81%A7%E8%A1%8C%E3%81%86/</guid>
      <description>Windows環境で直接開発すると文字コードの問題などがあるのでVSCodeのRemoteDevelopmentを使用して開発したい。 準備 V</description>
    </item>
    
    <item>
      <title>VSCodeのインストーラのリンク</title>
      <link>https://szk302.dev/posts/VSCode%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%A9%E3%81%AE%E3%83%AA%E3%83%B3%E3%82%AF/</link>
      <pubDate>Mon, 21 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://szk302.dev/posts/VSCode%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%A9%E3%81%AE%E3%83%AA%E3%83%B3%E3%82%AF/</guid>
      <description>VSCodeをスクリプトでインストールしたいがDownloadURLがわからないため調べた Systemインストーラは以下のURLでダウンロー</description>
    </item>
    
    <item>
      <title>digやnslookupでネームサーバを指定して問い合わせ</title>
      <link>https://szk302.dev/posts/dig%E3%82%84nslookup%E3%81%A7%E3%83%8D%E3%83%BC%E3%83%A0%E3%82%B5%E3%83%BC%E3%83%90%E3%82%92%E6%8C%87%E5%AE%9A%E3%81%97%E3%81%A6%E5%95%8F%E3%81%84%E5%90%88%E3%82%8F%E3%81%9B/</link>
      <pubDate>Sat, 19 Feb 2022 23:15:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/dig%E3%82%84nslookup%E3%81%A7%E3%83%8D%E3%83%BC%E3%83%A0%E3%82%B5%E3%83%BC%E3%83%90%E3%82%92%E6%8C%87%E5%AE%9A%E3%81%97%E3%81%A6%E5%95%8F%E3%81%84%E5%90%88%E3%82%8F%E3%81%9B/</guid>
      <description>毎度忘れるのでメモ dig dig www.google.com @1.1.1.1 を実行 ; &amp;lt;&amp;lt;&amp;gt;&amp;gt; DiG 9.16.1-Ubuntu &amp;lt;&amp;lt;&amp;gt;&amp;gt; www.google.com @1.1.1.1 ;; global options: +cmd ;; Got answer: ;; -&amp;gt;&amp;gt;HEADER&amp;lt;&amp;lt;- opcode: QUERY, status: NOERROR, id: 60699 ;; flags: qr rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 1 ;; OPT PSEUDOSECTION: ; EDNS: version: 0, flags:; udp: 1232 ;; QUESTION SECTION: ;www.google.com. IN A ;; ANSWER SECTION:</description>
    </item>
    
    <item>
      <title>Packer実行時のデバッグ方法</title>
      <link>https://szk302.dev/posts/Packer%E5%AE%9F%E8%A1%8C%E6%99%82%E3%81%AE%E3%83%87%E3%83%90%E3%83%83%E3%82%B0%E6%96%B9%E6%B3%95/</link>
      <pubDate>Sat, 19 Feb 2022 23:09:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/Packer%E5%AE%9F%E8%A1%8C%E6%99%82%E3%81%AE%E3%83%87%E3%83%90%E3%83%83%E3%82%B0%E6%96%B9%E6%B3%95/</guid>
      <description>Packerのデバッグ方法を調査した 方法 環境変数に以下の値を設定 PACKER_LOG=1 PACKER_LOG_PATH=packer.log packer build -debug 定義ファイル 参考 Debugging Packer Builds</description>
    </item>
    
    <item>
      <title>PackerとAnsibleを使用してWindowsServer2019のAMIのビルドを行う</title>
      <link>https://szk302.dev/posts/Packer%E3%81%A8Ansible%E3%82%92%E4%BD%BF%E7%94%A8%E3%81%97%E3%81%A6WindowsServer2019%E3%81%AEAMI%E3%81%AE%E3%83%93%E3%83%AB%E3%83%89%E3%82%92%E8%A1%8C%E3%81%86/</link>
      <pubDate>Sat, 19 Feb 2022 22:58:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/Packer%E3%81%A8Ansible%E3%82%92%E4%BD%BF%E7%94%A8%E3%81%97%E3%81%A6WindowsServer2019%E3%81%AEAMI%E3%81%AE%E3%83%93%E3%83%AB%E3%83%89%E3%82%92%E8%A1%8C%E3%81%86/</guid>
      <description>意外とWindowsのEC2を使用することが多いため、簡単にAMIを作成できるようにしておきたい 環境 Ansible: 5.3.0 Packer: 1.7.10 今回は以下のDockerfile</description>
    </item>
    
    <item>
      <title>curlでHTTPステータスコードが200になるまでwaitする</title>
      <link>https://szk302.dev/posts/curl%E3%81%A7HTTP%E3%82%B9%E3%83%86%E3%83%BC%E3%82%BF%E3%82%B9%E3%82%B3%E3%83%BC%E3%83%89%E3%81%8C200%E3%81%AB%E3%81%AA%E3%82%8B%E3%81%BE%E3%81%A7wait%E3%81%99%E3%82%8B/</link>
      <pubDate>Sat, 19 Feb 2022 15:49:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/curl%E3%81%A7HTTP%E3%82%B9%E3%83%86%E3%83%BC%E3%82%BF%E3%82%B9%E3%82%B3%E3%83%BC%E3%83%89%E3%81%8C200%E3%81%AB%E3%81%AA%E3%82%8B%E3%81%BE%E3%81%A7wait%E3%81%99%E3%82%8B/</guid>
      <description>curlを使用してHTTPステータスコードが200になるまで待ちたい 対応 以下のコードで5秒間隔でHTTPステータスが200になるまで待ち、3</description>
    </item>
    
    <item>
      <title>Tomcatのログの保存期間を変更する</title>
      <link>https://szk302.dev/posts/Tomcat%E3%81%AE%E3%83%AD%E3%82%B0%E3%81%AE%E4%BF%9D%E5%AD%98%E6%9C%9F%E9%96%93%E3%82%92%E5%A4%89%E6%9B%B4%E3%81%99%E3%82%8B/</link>
      <pubDate>Sat, 19 Feb 2022 09:43:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/Tomcat%E3%81%AE%E3%83%AD%E3%82%B0%E3%81%AE%E4%BF%9D%E5%AD%98%E6%9C%9F%E9%96%93%E3%82%92%E5%A4%89%E6%9B%B4%E3%81%99%E3%82%8B/</guid>
      <description>Tomcatのログの保存期間を10日に変更したい。 昔は古いログは削除されなかったようだが、今はmaxDaysで設定できるようだ。 以下のログの</description>
    </item>
    
    <item>
      <title>Tomcatのログの種類</title>
      <link>https://szk302.dev/posts/Tomcat%E3%81%AE%E3%83%AD%E3%82%B0%E3%81%AE%E7%A8%AE%E9%A1%9E/</link>
      <pubDate>Sat, 19 Feb 2022 09:20:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/Tomcat%E3%81%AE%E3%83%AD%E3%82%B0%E3%81%AE%E7%A8%AE%E9%A1%9E/</guid>
      <description>どれがなんのログなのかわからないため調べた。 Tomcatはデフォルトで以下のログを出力している。 catalina.out コンソール出力と同じ(標準出力/標準エラー</description>
    </item>
    
    <item>
      <title>Tomcatで不要なログ出力を停止する</title>
      <link>https://szk302.dev/posts/Tomcat%E3%81%A7%E4%B8%8D%E8%A6%81%E3%81%AA%E3%83%AD%E3%82%B0%E5%87%BA%E5%8A%9B%E3%82%92%E5%81%9C%E6%AD%A2%E3%81%99%E3%82%8B/</link>
      <pubDate>Fri, 18 Feb 2022 08:32:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/Tomcat%E3%81%A7%E4%B8%8D%E8%A6%81%E3%81%AA%E3%83%AD%E3%82%B0%E5%87%BA%E5%8A%9B%E3%82%92%E5%81%9C%E6%AD%A2%E3%81%99%E3%82%8B/</guid>
      <description>Tomcatを使用する際、managerなどのデフォルトで含まれるアプリは消すため、ログ出力設定もプロパティをコメントアウトする。 以下のログ</description>
    </item>
    
    <item>
      <title>ストレージ容量を圧迫しているディレクトリを探す</title>
      <link>https://szk302.dev/posts/%E3%82%B9%E3%83%88%E3%83%AC%E3%83%BC%E3%82%B8%E5%AE%B9%E9%87%8F%E3%82%92%E5%9C%A7%E8%BF%AB%E3%81%97%E3%81%A6%E3%81%84%E3%82%8B%E3%83%87%E3%82%A3%E3%83%AC%E3%82%AF%E3%83%88%E3%83%AA%E3%82%92%E6%8E%A2%E3%81%99/</link>
      <pubDate>Fri, 18 Feb 2022 08:07:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/%E3%82%B9%E3%83%88%E3%83%AC%E3%83%BC%E3%82%B8%E5%AE%B9%E9%87%8F%E3%82%92%E5%9C%A7%E8%BF%AB%E3%81%97%E3%81%A6%E3%81%84%E3%82%8B%E3%83%87%E3%82%A3%E3%83%AC%E3%82%AF%E3%83%88%E3%83%AA%E3%82%92%E6%8E%A2%E3%81%99/</guid>
      <description>サーバのストレージ容量が圧迫されいることがわかったが、どのディレクトリが圧迫しているかわからない。 対応 以下のコマンドを実行し、ディレクトリの</description>
    </item>
    
    <item>
      <title>sedで後方参照を使用してコメントイン、アンコメントを行う</title>
      <link>https://szk302.dev/posts/sed%E3%81%A7%E5%BE%8C%E6%96%B9%E5%8F%82%E7%85%A7%E3%82%92%E4%BD%BF%E7%94%A8%E3%81%97%E3%81%A6%E3%82%B3%E3%83%A1%E3%83%B3%E3%83%88%E3%82%A4%E3%83%B3%E3%82%A2%E3%83%B3%E3%82%B3%E3%83%A1%E3%83%B3%E3%83%88%E3%82%92%E8%A1%8C%E3%81%86/</link>
      <pubDate>Thu, 17 Feb 2022 08:04:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/sed%E3%81%A7%E5%BE%8C%E6%96%B9%E5%8F%82%E7%85%A7%E3%82%92%E4%BD%BF%E7%94%A8%E3%81%97%E3%81%A6%E3%82%B3%E3%83%A1%E3%83%B3%E3%83%88%E3%82%A4%E3%83%B3%E3%82%A2%E3%83%B3%E3%82%B3%E3%83%A1%E3%83%B3%E3%83%88%E3%82%92%E8%A1%8C%E3%81%86/</guid>
      <description>行番号指定でコメントアウトを行うのではなく、文字列を指定してコメントアウトする 方法 後方参照?(マッチ後変数)を使用して行う 更新割当演算子(|</description>
    </item>
    
    <item>
      <title>AWSCLIで一時的な認証を取得する</title>
      <link>https://szk302.dev/posts/AWSCLI%E3%81%A7%E4%B8%80%E6%99%82%E7%9A%84%E3%81%AA%E8%AA%8D%E8%A8%BC%E3%82%92%E5%8F%96%E5%BE%97%E3%81%99%E3%82%8B/</link>
      <pubDate>Wed, 16 Feb 2022 07:47:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/AWSCLI%E3%81%A7%E4%B8%80%E6%99%82%E7%9A%84%E3%81%AA%E8%AA%8D%E8%A8%BC%E3%82%92%E5%8F%96%E5%BE%97%E3%81%99%E3%82%8B/</guid>
      <description>毎度忘れるのでメモ 方法 一時的なTokenの取得(duration-secondsのデフォルトは12時間) aws sts get-session-token --duration-seconds 3600 表示 { &amp;#34;Credentials&amp;#34;: { &amp;#34;AccessKeyId&amp;#34;: &amp;#34;アク</description>
    </item>
    
    <item>
      <title>WindowsのEC2に接続するだけのIAMユーザを作成する</title>
      <link>https://szk302.dev/posts/Windows%E3%81%AEEC2%E3%81%AB%E6%8E%A5%E7%B6%9A%E3%81%99%E3%82%8B%E3%81%A0%E3%81%91%E3%81%AEIAM%E3%83%A6%E3%83%BC%E3%82%B6%E3%82%92%E4%BD%9C%E6%88%90%E3%81%99%E3%82%8B/</link>
      <pubDate>Wed, 16 Feb 2022 05:55:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/Windows%E3%81%AEEC2%E3%81%AB%E6%8E%A5%E7%B6%9A%E3%81%99%E3%82%8B%E3%81%A0%E3%81%91%E3%81%AEIAM%E3%83%A6%E3%83%BC%E3%82%B6%E3%82%92%E4%BD%9C%E6%88%90%E3%81%99%E3%82%8B/</guid>
      <description>WindowsのEC2へSSMのポートフォワーディングを利用してRDP接続するユーザを作成したい。 設定 以下のポリシーをもつIAMユーザを作成</description>
    </item>
    
    <item>
      <title>AWSCLIの認証情報を環境変数から設定する</title>
      <link>https://szk302.dev/posts/AWSCLI%E3%81%AE%E8%AA%8D%E8%A8%BC%E6%83%85%E5%A0%B1%E3%82%92%E7%92%B0%E5%A2%83%E5%A4%89%E6%95%B0%E3%81%8B%E3%82%89%E8%A8%AD%E5%AE%9A%E3%81%99%E3%82%8B/</link>
      <pubDate>Wed, 16 Feb 2022 05:33:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/AWSCLI%E3%81%AE%E8%AA%8D%E8%A8%BC%E6%83%85%E5%A0%B1%E3%82%92%E7%92%B0%E5%A2%83%E5%A4%89%E6%95%B0%E3%81%8B%E3%82%89%E8%A8%AD%E5%AE%9A%E3%81%99%E3%82%8B/</guid>
      <description>毎度忘れるのでメモ 環境変数への設定 Shell export AWS_ACCESS_KEY_ID=AKIXXXXXXXXXXXXXXXXX export AWS_SECRET_ACCESS_KEY=wJaXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX export AWS_SESSION_TOKEN=AQoXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX export AWS_DEFAULT_REGION=ap-northeast-1 Powershell $Env:AWS_ACCESS_KEY_ID=&amp;#34;AKIXXXXXXXXXXXXXXXXX&amp;#34; $Env:AWS_SECRET_ACCESS_KEY=&amp;#34;wJaXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX&amp;#34; $Env:AWS_SESSION_TOKEN=&amp;#34;AQoXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX&amp;#34; $Env:AWS_DEFAULT_REGION=&amp;#34;ap-northeast-1&amp;#34; Bat set AWS_ACCESS_KEY_ID=AKIXXXXXXXXXXXXXXXXX set AWS_SECRET_ACCESS_KEY=wJaXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX set AWS_SESSION_TOKEN=AQoXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX set AWS_DEFAULT_REGION=ap-northeast-1 参考 Using Credentials from Environment Variables</description>
    </item>
    
    <item>
      <title>ブロードキャストとマルチキャストの違い</title>
      <link>https://szk302.dev/posts/Network/%E3%83%96%E3%83%AD%E3%83%BC%E3%83%89%E3%82%AD%E3%83%A3%E3%82%B9%E3%83%88%E3%81%A8%E3%83%9E%E3%83%AB%E3%83%81%E3%82%AD%E3%83%A3%E3%82%B9%E3%83%88%E3%81%AE%E9%81%95%E3%81%84/</link>
      <pubDate>Tue, 25 Jan 2022 08:20:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/Network/%E3%83%96%E3%83%AD%E3%83%BC%E3%83%89%E3%82%AD%E3%83%A3%E3%82%B9%E3%83%88%E3%81%A8%E3%83%9E%E3%83%AB%E3%83%81%E3%82%AD%E3%83%A3%E3%82%B9%E3%83%88%E3%81%AE%E9%81%95%E3%81%84/</guid>
      <description>ブロードキャストとマルチキャストの違いを忘れたのでメモ ユニキャスト 一対一 ブロードキャスト データリンク内のすべて マルチキャスト 特定のグループ内</description>
    </item>
    
    <item>
      <title>AWSDirectConnectの接続方法</title>
      <link>https://szk302.dev/posts/AWSDirectConnect%E3%81%AE%E6%8E%A5%E7%B6%9A%E6%96%B9%E6%B3%95/</link>
      <pubDate>Mon, 24 Jan 2022 22:32:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/AWSDirectConnect%E3%81%AE%E6%8E%A5%E7%B6%9A%E6%96%B9%E6%B3%95/</guid>
      <description>AWSDirectConnectを使用してS3やAPIGateway(Public)に接続したいという要件が出たため調査 専用接続、ホスト接続</description>
    </item>
    
    <item>
      <title>dateコマンドで日付を含むファイル名を作成する</title>
      <link>https://szk302.dev/posts/date%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89%E3%81%A7%E6%97%A5%E4%BB%98%E3%82%92%E5%90%AB%E3%82%80%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E5%90%8D%E3%82%92%E4%BD%9C%E6%88%90%E3%81%99%E3%82%8B/</link>
      <pubDate>Wed, 19 Jan 2022 23:39:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/date%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89%E3%81%A7%E6%97%A5%E4%BB%98%E3%82%92%E5%90%AB%E3%82%80%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E5%90%8D%E3%82%92%E4%BD%9C%E6%88%90%E3%81%99%E3%82%8B/</guid>
      <description>日付を含むファイル名を生成したい FILE_PATH=sample.adoc FILE_NAME=&amp;#34;${FILE_PATH##*/}&amp;#34; POST_DATA_TITLE=&amp;#34;${FILE_NAME%%.adoc}_`TZ=Asia/Tokyo date +%Y%m%d_%H-%M-%S`.adoc&amp;#34; echo ${POST_DATA_TITLE} sample_20220119_23-37-31.adoc</description>
    </item>
    
    <item>
      <title>GradleでSpringBoot使用時のWarファイル生成に依存jarを含めない</title>
      <link>https://szk302.dev/posts/Gradle%E3%81%A7SpringBoot%E4%BD%BF%E7%94%A8%E6%99%82%E3%81%AEWar%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E7%94%9F%E6%88%90%E3%81%AB%E4%BE%9D%E5%AD%98jar%E3%82%92%E5%90%AB%E3%82%81%E3%81%AA%E3%81%84/</link>
      <pubDate>Wed, 12 Jan 2022 08:42:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/Gradle%E3%81%A7SpringBoot%E4%BD%BF%E7%94%A8%E6%99%82%E3%81%AEWar%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E7%94%9F%E6%88%90%E3%81%AB%E4%BE%9D%E5%AD%98jar%E3%82%92%E5%90%AB%E3%82%81%E3%81%AA%E3%81%84/</guid>
      <description>SpringBootを使用して作成したWebアプリケーションをWarにするときに、依存ライブラリを別にしたい 方法 dependenciesの書</description>
    </item>
    
    <item>
      <title>PowershellでHTTPサーバを建てる</title>
      <link>https://szk302.dev/posts/Powershell%E3%81%A7HTTP%E3%82%B5%E3%83%BC%E3%83%90%E3%82%92%E5%BB%BA%E3%81%A6%E3%82%8B/</link>
      <pubDate>Mon, 27 Dec 2021 07:52:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/Powershell%E3%81%A7HTTP%E3%82%B5%E3%83%BC%E3%83%90%E3%82%92%E5%BB%BA%E3%81%A6%E3%82%8B/</guid>
      <description>WindowsPCを使用したネットワーク疎通確認用にPowershellで簡易HTTPサーバを作成した。 http-server.ps1 $html = @&amp;#34; &amp;lt;!doctype html&amp;gt; &amp;lt;html lang=&amp;#34;ja&amp;#34;&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&amp;#34;utf-8&amp;#34;&amp;gt; &amp;lt;title&amp;gt;TestPage&amp;lt;/title&amp;gt; &amp;lt;meta name=&amp;#34;description&amp;#34; content=&amp;#34;Test page&amp;#34;&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt;</description>
    </item>
    
    <item>
      <title>Gitのリポジトリの設定としてユーザ名とメールアドレスを設定する</title>
      <link>https://szk302.dev/posts/Git%E3%81%AE%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E3%81%AE%E8%A8%AD%E5%AE%9A%E3%81%A8%E3%81%97%E3%81%A6%E3%83%A6%E3%83%BC%E3%82%B6%E5%90%8D%E3%81%A8%E3%83%A1%E3%83%BC%E3%83%AB%E3%82%A2%E3%83%89%E3%83%AC%E3%82%B9%E3%82%92%E8%A8%AD%E5%AE%9A%E3%81%99%E3%82%8B/</link>
      <pubDate>Wed, 22 Dec 2021 08:10:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/Git%E3%81%AE%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E3%81%AE%E8%A8%AD%E5%AE%9A%E3%81%A8%E3%81%97%E3%81%A6%E3%83%A6%E3%83%BC%E3%82%B6%E5%90%8D%E3%81%A8%E3%83%A1%E3%83%BC%E3%83%AB%E3%82%A2%E3%83%89%E3%83%AC%E3%82%B9%E3%82%92%E8%A8%AD%E5%AE%9A%E3%81%99%E3%82%8B/</guid>
      <description>環境変数からユーザ名とメールアドレスを指定していたが、WSLやコンテナ内からのコミットで切り替わり、誤コミット連発したのでローカル設定として</description>
    </item>
    
    <item>
      <title>jqでjsonの値を書き換える</title>
      <link>https://szk302.dev/posts/jq%E3%81%A7json%E3%81%AE%E5%80%A4%E3%82%92%E6%9B%B8%E3%81%8D%E6%8F%9B%E3%81%88%E3%82%8B/</link>
      <pubDate>Wed, 22 Dec 2021 07:51:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/jq%E3%81%A7json%E3%81%AE%E5%80%A4%E3%82%92%E6%9B%B8%E3%81%8D%E6%8F%9B%E3%81%88%E3%82%8B/</guid>
      <description>jqでjsonの一部の値だけ書き換えたい 方法 更新割当演算子(|=)を使用する Ex base.json { &amp;#34;title&amp;#34;: &amp;#34;Sample json&amp;#34;, &amp;#34;body&amp;#34;: { &amp;#34;storage&amp;#34;: { &amp;#34;value&amp;#34;: &amp;#34;&amp;#34; } } } jq &amp;#39;.body.storage.value |=&amp;#34;xyz&amp;#34;&amp;#39; base.json { &amp;#34;title&amp;#34;: &amp;#34;Sample json&amp;#34;, &amp;#34;body&amp;#34;: { &amp;#34;storage&amp;#34;: { &amp;#34;value&amp;#34;: &amp;#34;xyz&amp;#34; } } }</description>
    </item>
    
    <item>
      <title>テストに使用できる特別なIP</title>
      <link>https://szk302.dev/posts/%E3%83%86%E3%82%B9%E3%83%88%E3%81%AB%E4%BD%BF%E7%94%A8%E3%81%A7%E3%81%8D%E3%82%8B%E7%89%B9%E5%88%A5%E3%81%AAIP/</link>
      <pubDate>Mon, 20 Dec 2021 08:38:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/%E3%83%86%E3%82%B9%E3%83%88%E3%81%AB%E4%BD%BF%E7%94%A8%E3%81%A7%E3%81%8D%E3%82%8B%E7%89%B9%E5%88%A5%E3%81%AAIP/</guid>
      <description>ブログの記事中で記述できるドメインの example.com のような特別なIPを調査 TEST-NET-2: 203.0.113.0/24 参考 rfc6890 RFC 6890 - Special-Purpose IP Address Registries 日本語訳</description>
    </item>
    
    <item>
      <title>AlpineLinuxにcsplitをインストールする</title>
      <link>https://szk302.dev/posts/AlpineLinux%E3%81%ABcsplit%E3%82%92%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E3%81%99%E3%82%8B/</link>
      <pubDate>Sun, 19 Dec 2021 22:36:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/AlpineLinux%E3%81%ABcsplit%E3%82%92%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E3%81%99%E3%82%8B/</guid>
      <description>AlpineLinuxでcsplitを使用したい インストール apk add coreutils csplit --version csplit (GNU coreutils) 8.32 Copyright (C) 2020 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later &amp;lt;https://gnu.org/licenses/gpl.html&amp;gt;. This is free software: you are free to change and redistribute it. There is NO</description>
    </item>
    
    <item>
      <title>yqでyamlからjsonに変換する</title>
      <link>https://szk302.dev/posts/yq%E3%81%A7yaml%E3%81%8B%E3%82%89json%E3%81%AB%E5%A4%89%E6%8F%9B%E3%81%99%E3%82%8B/</link>
      <pubDate>Sun, 19 Dec 2021 22:34:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/yq%E3%81%A7yaml%E3%81%8B%E3%82%89json%E3%81%AB%E5%A4%89%E6%8F%9B%E3%81%99%E3%82%8B/</guid>
      <description>yamlからjsonに変換する必要があったため調査 環境 yq: version 4.16.1 方法 ファイルから xx00(ymlファイル) title: PlantUMLでオブジェクトの並び</description>
    </item>
    
    <item>
      <title>Entrypoint指定済みのDockerイメージでbashを実行したい</title>
      <link>https://szk302.dev/posts/Entrypoint%E6%8C%87%E5%AE%9A%E6%B8%88%E3%81%BF%E3%81%AEDocker%E3%82%A4%E3%83%A1%E3%83%BC%E3%82%B8%E3%81%A7bash%E3%82%92%E5%AE%9F%E8%A1%8C%E3%81%97%E3%81%9F%E3%81%84/</link>
      <pubDate>Sun, 19 Dec 2021 22:12:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/Entrypoint%E6%8C%87%E5%AE%9A%E6%B8%88%E3%81%BF%E3%81%AEDocker%E3%82%A4%E3%83%A1%E3%83%BC%E3%82%B8%E3%81%A7bash%E3%82%92%E5%AE%9F%E8%A1%8C%E3%81%97%E3%81%9F%E3%81%84/</guid>
      <description>Entrypoint指定済みのDockerイメージに対して docker run -it ${IMAGE_NAME} /bin/bash したい。 Entrypointが指定されている場合のコマンド指定はEntr</description>
    </item>
    
    <item>
      <title>Gitでマルチバイトの文字を表示した場合エスケープされる</title>
      <link>https://szk302.dev/posts/Git%E3%81%A7%E3%83%9E%E3%83%AB%E3%83%81%E3%83%90%E3%82%A4%E3%83%88%E6%96%87%E5%AD%97%E3%82%92%E8%A1%A8%E7%A4%BA%E3%81%97%E3%81%9F%E5%A0%B4%E5%90%88%E3%82%A8%E3%82%B9%E3%82%B1%E3%83%BC%E3%83%97%E3%81%95%E3%82%8C%E3%82%8B/</link>
      <pubDate>Sun, 19 Dec 2021 22:12:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/Git%E3%81%A7%E3%83%9E%E3%83%AB%E3%83%81%E3%83%90%E3%82%A4%E3%83%88%E6%96%87%E5%AD%97%E3%82%92%E8%A1%A8%E7%A4%BA%E3%81%97%E3%81%9F%E5%A0%B4%E5%90%88%E3%82%A8%E3%82%B9%E3%82%B1%E3%83%BC%E3%83%97%E3%81%95%E3%82%8C%E3%82%8B/</guid>
      <description>対応 git config --global core.quotepath false オプション core.quotepath Cのエスケープ方法と同じようにマルチバイト文字をエスケープする(default:true) 参考 core.quotepath kkato233/</description>
    </item>
    
    <item>
      <title>RTX830にIPスプーフィングのSecureフィルタを設定する</title>
      <link>https://szk302.dev/posts/RTX830%E3%81%ABIP%E3%82%B9%E3%83%97%E3%83%BC%E3%83%95%E3%82%A3%E3%83%B3%E3%82%B0%E3%81%AESecure%E3%83%95%E3%82%A3%E3%83%AB%E3%82%BF%E3%82%92%E8%A8%AD%E5%AE%9A%E3%81%99%E3%82%8B/</link>
      <pubDate>Sun, 19 Dec 2021 14:49:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/RTX830%E3%81%ABIP%E3%82%B9%E3%83%97%E3%83%BC%E3%83%95%E3%82%A3%E3%83%B3%E3%82%B0%E3%81%AESecure%E3%83%95%E3%82%A3%E3%83%AB%E3%82%BF%E3%82%92%E8%A8%AD%E5%AE%9A%E3%81%99%E3%82%8B/</guid>
      <description>以下の攻撃に対するフィルタを設定する IPスプーフィング 送信元のIPアドレスを偽装し、通信を行う攻撃手法 Land攻撃 送信元IPアドレスと送信先</description>
    </item>
    
    <item>
      <title>pipインストールしたモジュールのbinのパスを調べる</title>
      <link>https://szk302.dev/posts/pip%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E3%81%97%E3%81%9F%E3%83%A2%E3%82%B8%E3%83%A5%E3%83%BC%E3%83%AB%E3%81%AEbin%E3%81%AE%E3%83%91%E3%82%B9%E3%82%92%E8%AA%BF%E3%81%B9%E3%82%8B/</link>
      <pubDate>Sun, 19 Dec 2021 10:01:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/pip%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E3%81%97%E3%81%9F%E3%83%A2%E3%82%B8%E3%83%A5%E3%83%BC%E3%83%AB%E3%81%AEbin%E3%81%AE%E3%83%91%E3%82%B9%E3%82%92%E8%AA%BF%E3%81%B9%E3%82%8B/</guid>
      <description>pipで git-filter-repo をインストールしたが、 git: &amp;#39;filter-repo&amp;#39; is not a git command というエラーが発生 原因はgit-filter-repoのパスが通っていないせいだった。 git-</description>
    </item>
    
    <item>
      <title>GitのログのCommiterとAuthorをまとめて改編する</title>
      <link>https://szk302.dev/posts/Git%E3%81%AE%E3%83%AD%E3%82%B0%E3%81%AECommiter%E3%81%A8Author%E3%82%92%E3%81%BE%E3%81%A8%E3%82%81%E3%81%A6%E6%94%B9%E7%B7%A8%E3%81%99%E3%82%8B/</link>
      <pubDate>Sun, 19 Dec 2021 08:44:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/Git%E3%81%AE%E3%83%AD%E3%82%B0%E3%81%AECommiter%E3%81%A8Author%E3%82%92%E3%81%BE%E3%81%A8%E3%82%81%E3%81%A6%E6%94%B9%E7%B7%A8%E3%81%99%E3%82%8B/</guid>
      <description>WindowsやWSLなど複数の場所でコミットしていたので、GitのログのCommiterやAuthorがバラバラになってしまった。 過去のロ</description>
    </item>
    
    <item>
      <title>Gitで直近にコミットされたファイルのパスを取得する</title>
      <link>https://szk302.dev/posts/Git%E3%81%A7%E7%9B%B4%E8%BF%91%E3%81%AB%E3%82%B3%E3%83%9F%E3%83%83%E3%83%88%E3%81%95%E3%82%8C%E3%81%9F%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%AE%E3%83%91%E3%82%B9%E3%82%92%E5%8F%96%E5%BE%97%E3%81%99%E3%82%8B/</link>
      <pubDate>Wed, 15 Dec 2021 00:45:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/Git%E3%81%A7%E7%9B%B4%E8%BF%91%E3%81%AB%E3%82%B3%E3%83%9F%E3%83%83%E3%83%88%E3%81%95%E3%82%8C%E3%81%9F%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%AE%E3%83%91%E3%82%B9%E3%82%92%E5%8F%96%E5%BE%97%E3%81%99%E3%82%8B/</guid>
      <description>Gitで直近にコミットされたファイルのパスを取得した。 git log --pretty=&amp;#34;&amp;#34; -1 --name-only -- *.adoc 表示結果 posts/jqでファイルの内容をjsonの値として取り込む.a</description>
    </item>
    
    <item>
      <title>jqでファイルの内容をjsonの値として取り込む</title>
      <link>https://szk302.dev/posts/jq%E3%81%A7%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%AE%E5%86%85%E5%AE%B9%E3%82%92json%E3%81%AE%E5%80%A4%E3%81%A8%E3%81%97%E3%81%A6%E5%8F%96%E3%82%8A%E8%BE%BC%E3%82%80/</link>
      <pubDate>Mon, 13 Dec 2021 14:33:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/jq%E3%81%A7%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%AE%E5%86%85%E5%AE%B9%E3%82%92json%E3%81%AE%E5%80%A4%E3%81%A8%E3%81%97%E3%81%A6%E5%8F%96%E3%82%8A%E8%BE%BC%E3%82%80/</guid>
      <description>ファイルの内容を改行などをエスケープしつつjsonの項目のvalueとして取り込みたい 対応 rawfileオプションを使用する rawfile 指定されたファ</description>
    </item>
    
    <item>
      <title>ソースに記述されたTodoコメントの一覧をAuthorと一緒に表示する</title>
      <link>https://szk302.dev/posts/%E3%82%BD%E3%83%BC%E3%82%B9%E3%81%AB%E8%A8%98%E8%BF%B0%E3%81%95%E3%82%8C%E3%81%9FTodo%E3%82%B3%E3%83%A1%E3%83%B3%E3%83%88%E3%81%AE%E4%B8%80%E8%A6%A7%E3%82%92Author%E3%81%A8%E4%B8%80%E7%B7%92%E3%81%AB%E8%A1%A8%E7%A4%BA%E3%81%99%E3%82%8B/</link>
      <pubDate>Sun, 05 Dec 2021 12:38:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/%E3%82%BD%E3%83%BC%E3%82%B9%E3%81%AB%E8%A8%98%E8%BF%B0%E3%81%95%E3%82%8C%E3%81%9FTodo%E3%82%B3%E3%83%A1%E3%83%B3%E3%83%88%E3%81%AE%E4%B8%80%E8%A6%A7%E3%82%92Author%E3%81%A8%E4%B8%80%E7%B7%92%E3%81%AB%E8%A1%A8%E7%A4%BA%E3%81%99%E3%82%8B/</guid>
      <description>コマンド git grep -il TODO | xargs -n1 git blame --show-name | grep -i TODO git grep パターンに一致する行を表示する オプション -i パターンとファイルの大文字と小文字の違いを無視 -l 一致したす</description>
    </item>
    
    <item>
      <title>CROSS-ENVで環境に関係なく環境変数を指定してYarnのスクリプトを実行する</title>
      <link>https://szk302.dev/posts/CROSS-ENV%E3%81%A7%E7%92%B0%E5%A2%83%E3%81%AB%E9%96%A2%E4%BF%82%E3%81%AA%E3%81%8F%E7%92%B0%E5%A2%83%E5%A4%89%E6%95%B0%E3%82%92%E6%8C%87%E5%AE%9A%E3%81%97%E3%81%A6Yarn%E3%81%AE%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%97%E3%83%88%E3%82%92%E5%AE%9F%E8%A1%8C%E3%81%99%E3%82%8B/</link>
      <pubDate>Fri, 03 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://szk302.dev/posts/CROSS-ENV%E3%81%A7%E7%92%B0%E5%A2%83%E3%81%AB%E9%96%A2%E4%BF%82%E3%81%AA%E3%81%8F%E7%92%B0%E5%A2%83%E5%A4%89%E6%95%B0%E3%82%92%E6%8C%87%E5%AE%9A%E3%81%97%E3%81%A6Yarn%E3%81%AE%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%97%E3%83%88%E3%82%92%E5%AE%9F%E8%A1%8C%E3%81%99%E3%82%8B/</guid>
      <description>Yarnでスクリプト実行時にWindowsやLinux環境を考慮せずに環境変数を指定したい。 CROSS-ENVを使用するとマルチ環境で環境変</description>
    </item>
    
    <item>
      <title>react-app-rewiredでビルドしたコードのclass名を固定化したい</title>
      <link>https://szk302.dev/posts/react-app-rewired%E3%81%A7%E3%83%93%E3%83%AB%E3%83%89%E3%81%97%E3%81%9F%E3%82%B3%E3%83%BC%E3%83%89%E3%81%AEclass%E5%90%8D%E3%82%92%E5%9B%BA%E5%AE%9A%E5%8C%96%E3%81%97%E3%81%9F%E3%81%84/</link>
      <pubDate>Fri, 03 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://szk302.dev/posts/react-app-rewired%E3%81%A7%E3%83%93%E3%83%AB%E3%83%89%E3%81%97%E3%81%9F%E3%82%B3%E3%83%BC%E3%83%89%E3%81%AEclass%E5%90%8D%E3%82%92%E5%9B%BA%E5%AE%9A%E5%8C%96%E3%81%97%E3%81%9F%E3%81%84/</guid>
      <description>react-app-rewiredでビルドしたときに、クラス名にハッシュ値がつく。 結局使用したかったが、このクラス名を固定化したかった。 localIdentName を</description>
    </item>
    
    <item>
      <title>Goで標準出力にログを出力する</title>
      <link>https://szk302.dev/posts/Go%E3%81%A7%E6%A8%99%E6%BA%96%E5%87%BA%E5%8A%9B%E3%81%AB%E3%83%AD%E3%82%B0%E3%82%92%E5%87%BA%E5%8A%9B%E3%81%99%E3%82%8B/</link>
      <pubDate>Sat, 27 Nov 2021 08:42:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/Go%E3%81%A7%E6%A8%99%E6%BA%96%E5%87%BA%E5%8A%9B%E3%81%AB%E3%83%AD%E3%82%B0%E3%82%92%E5%87%BA%E5%8A%9B%E3%81%99%E3%82%8B/</guid>
      <description>軽くデバッグするために標準出力に出す方法を調べた package main import &amp;#34;log&amp;#34; func main() { log.Println(&amp;#34;ログ&amp;#34;) }</description>
    </item>
    
    <item>
      <title>Gitで一時的にコミット時の名前とメールアドレスを変更する</title>
      <link>https://szk302.dev/posts/Git%E3%81%A7%E4%B8%80%E6%99%82%E7%9A%84%E3%81%AB%E3%82%B3%E3%83%9F%E3%83%83%E3%83%88%E6%99%82%E3%81%AE%E5%90%8D%E5%89%8D%E3%81%A8%E3%83%A1%E3%83%BC%E3%83%AB%E3%82%A2%E3%83%89%E3%83%AC%E3%82%B9%E3%82%92%E5%A4%89%E6%9B%B4%E3%81%99%E3%82%8B/</link>
      <pubDate>Sat, 27 Nov 2021 08:35:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/Git%E3%81%A7%E4%B8%80%E6%99%82%E7%9A%84%E3%81%AB%E3%82%B3%E3%83%9F%E3%83%83%E3%83%88%E6%99%82%E3%81%AE%E5%90%8D%E5%89%8D%E3%81%A8%E3%83%A1%E3%83%BC%E3%83%AB%E3%82%A2%E3%83%89%E3%83%AC%E3%82%B9%E3%82%92%E5%A4%89%E6%9B%B4%E3%81%99%E3%82%8B/</guid>
      <description>一時的にcloneしたリポジトリに対しコミットしたい場合に名前とメールアドレスを変えたかったので調査 `-c`オプションをつけてコマンドを実行</description>
    </item>
    
    <item>
      <title>GitHubActionsでWorkflowから別のリポジトリのWorkflowを使用する</title>
      <link>https://szk302.dev/posts/GitHubActions%E3%81%A7Workflow%E3%81%8B%E3%82%89%E5%88%A5%E3%81%AE%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E3%81%AEWorkflow%E3%82%92%E4%BD%BF%E7%94%A8%E3%81%99%E3%82%8B/</link>
      <pubDate>Fri, 26 Nov 2021 05:39:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/GitHubActions%E3%81%A7Workflow%E3%81%8B%E3%82%89%E5%88%A5%E3%81%AE%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E3%81%AEWorkflow%E3%82%92%E4%BD%BF%E7%94%A8%E3%81%99%E3%82%8B/</guid>
      <description>このBlogを構築するにあたりGitHubActionsを利用した。 コンテンツ用リポジトリとHugoの環境のリポジトリを分けており、 コンテン</description>
    </item>
    
    <item>
      <title>GitHubActionsで別のJobの成果物を利用する</title>
      <link>https://szk302.dev/posts/GitHubActions%E3%81%A7%E5%88%A5%E3%81%AEJob%E3%81%AE%E6%88%90%E6%9E%9C%E7%89%A9%E3%82%92%E5%88%A9%E7%94%A8%E3%81%99%E3%82%8B/</link>
      <pubDate>Fri, 26 Nov 2021 05:39:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/GitHubActions%E3%81%A7%E5%88%A5%E3%81%AEJob%E3%81%AE%E6%88%90%E6%9E%9C%E7%89%A9%E3%82%92%E5%88%A9%E7%94%A8%E3%81%99%E3%82%8B/</guid>
      <description>あるJobでビルドしてartifactとしてアップロードし、別のJobでアップロードしたartifactを使用した 実装 actions/che</description>
    </item>
    
    <item>
      <title>GoのPercent-encoding用関数はPath用とQuery用の2種類ある</title>
      <link>https://szk302.dev/posts/Go%E3%81%AEPercent-encoding%E7%94%A8%E9%96%A2%E6%95%B0%E3%81%AFPath%E7%94%A8%E3%81%A8Query%E7%94%A8%E3%81%AE2%E7%A8%AE%E9%A1%9E%E3%81%82%E3%82%8B/</link>
      <pubDate>Fri, 26 Nov 2021 05:39:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/Go%E3%81%AEPercent-encoding%E7%94%A8%E9%96%A2%E6%95%B0%E3%81%AFPath%E7%94%A8%E3%81%A8Query%E7%94%A8%E3%81%AE2%E7%A8%AE%E9%A1%9E%E3%81%82%E3%82%8B/</guid>
      <description>GoのPercent-encoding用関数はPath用とQuery用の2種類ある。 Path用 url.PathEscape() url.PathUnescape() Query用 url.QueryEscape() url.QueryUnescape() 参考 Go言語/パッケージ url</description>
    </item>
    
    <item>
      <title>PlantUMLでオブジェクトの並びを試してみる</title>
      <link>https://szk302.dev/posts/Plantuml%E3%81%A7%E3%82%AA%E3%83%96%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%81%AE%E4%B8%A6%E3%81%B3%E3%82%92%E8%A9%A6%E3%81%97%E3%81%A6%E3%81%BF%E3%82%8B/</link>
      <pubDate>Thu, 25 Nov 2021 08:20:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/Plantuml%E3%81%A7%E3%82%AA%E3%83%96%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%81%AE%E4%B8%A6%E3%81%B3%E3%82%92%E8%A9%A6%E3%81%97%E3%81%A6%E3%81%BF%E3%82%8B/</guid>
      <description>PlantUMLの配置 -と–について - の数で階層が変わる デフォルト設定では下方向に階層が広がる Note 分かりやすいようアルファベットの隣に階層の番</description>
    </item>
    
    <item>
      <title>Node.jsで同期的にファイル一覧を取得する</title>
      <link>https://szk302.dev/posts/Node.js%E3%81%A7%E5%90%8C%E6%9C%9F%E7%9A%84%E3%81%AB%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E4%B8%80%E8%A6%A7%E3%82%92%E5%8F%96%E5%BE%97%E3%81%99%E3%82%8B/</link>
      <pubDate>Thu, 25 Nov 2021 07:52:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/Node.js%E3%81%A7%E5%90%8C%E6%9C%9F%E7%9A%84%E3%81%AB%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E4%B8%80%E8%A6%A7%E3%82%92%E5%8F%96%E5%BE%97%E3%81%99%E3%82%8B/</guid>
      <description>時々Node.jsでモジュールなしかつ同期的にファイル一覧を取得する必要があるので書いた。 実装 file一覧 const fs = require(&amp;#34;fs&amp;#34;); const path = require(&amp;#34;path&amp;#34;); const targetDirpath = &amp;#34;./target&amp;#34;; function listFiles(dir) { return fs</description>
    </item>
    
    <item>
      <title>WSL2上でpushするとGitの認証が毎回走る</title>
      <link>https://szk302.dev/posts/WSL2%E4%B8%8A%E3%81%A7push%E3%81%99%E3%82%8B%E3%81%A8Git%E3%81%AE%E8%AA%8D%E8%A8%BC%E3%81%8C%E6%AF%8E%E5%9B%9E%E8%B5%B0%E3%82%8B/</link>
      <pubDate>Wed, 24 Nov 2021 05:28:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/WSL2%E4%B8%8A%E3%81%A7push%E3%81%99%E3%82%8B%E3%81%A8Git%E3%81%AE%E8%AA%8D%E8%A8%BC%E3%81%8C%E6%AF%8E%E5%9B%9E%E8%B5%B0%E3%82%8B/</guid>
      <description>WSL2上でコミットしてpushすると毎回認証を聞かれるため調査 対応 /usr/bin/git-credential-manager を編集し以下を追加 #!/bin/sh exec /mnt/c/Program\ Files/Git/mingw64/libexec/git-core/git-credential-manager.exe $@ 権限を変更 sudo chmod +x /usr/bin/git-credential-manager` $HOME/.gitconfig を編集 [credential] helper = manager 参考 Use the</description>
    </item>
    
    <item>
      <title>GitSubmoduleを削除</title>
      <link>https://szk302.dev/posts/GitSubmodule%E3%82%92%E5%89%8A%E9%99%A4/</link>
      <pubDate>Mon, 22 Nov 2021 23:36:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/GitSubmodule%E3%82%92%E5%89%8A%E9%99%A4/</guid>
      <description>contentをsubmoduleとして登録してあり削除する。 Console szk@X1:~/szk302/dev-blog-builder$ tree -L 1 . ├── archetypes ├── config.yml ├── content // submodule ├── environment ├── layouts ├── public ├── resources ├──</description>
    </item>
    
    <item>
      <title>Hugoでhtmlを生成した際にパスが小文字になる</title>
      <link>https://szk302.dev/posts/Hugo%E3%81%A7html%E3%82%92%E7%94%9F%E6%88%90%E3%81%97%E3%81%9F%E9%9A%9B%E3%81%AB%E3%83%91%E3%82%B9%E3%81%8C%E5%B0%8F%E6%96%87%E5%AD%97%E3%81%AB%E3%81%AA%E3%82%8B/</link>
      <pubDate>Mon, 22 Nov 2021 23:26:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/Hugo%E3%81%A7html%E3%82%92%E7%94%9F%E6%88%90%E3%81%97%E3%81%9F%E9%9A%9B%E3%81%AB%E3%83%91%E3%82%B9%E3%81%8C%E5%B0%8F%E6%96%87%E5%AD%97%E3%81%AB%E3%81%AA%E3%82%8B/</guid>
      <description>Hugoでhtmlを生成した際に大文字のファイル名で生成したところ、パスが小文字となり画像が表示されない問題が発生 config.ymlにオプ</description>
    </item>
    
    <item>
      <title>CloudflareのWebサイト設定でcacheを無効にする</title>
      <link>https://szk302.dev/posts/Cloudflare%E3%81%AEWeb%E3%82%B5%E3%82%A4%E3%83%88%E8%A8%AD%E5%AE%9A%E3%81%A7cache%E3%82%92%E7%84%A1%E5%8A%B9%E3%81%AB%E3%81%99%E3%82%8B/</link>
      <pubDate>Mon, 22 Nov 2021 22:37:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/Cloudflare%E3%81%AEWeb%E3%82%B5%E3%82%A4%E3%83%88%E8%A8%AD%E5%AE%9A%E3%81%A7cache%E3%82%92%E7%84%A1%E5%8A%B9%E3%81%AB%E3%81%99%E3%82%8B/</guid>
      <description>CloudflarePagesにはデフォルトでcacheが組み込まれているらしい。 Webサイト側のcacheはいらないようなのでRuleで無</description>
    </item>
    
    <item>
      <title>GitHubのPackagesアクセス用PATのアクセス許可をpackagesのみに制限する</title>
      <link>https://szk302.dev/posts/GitHub%E3%81%AEPackages%E3%82%A2%E3%82%AF%E3%82%BB%E3%82%B9%E7%94%A8PAT%E3%81%AE%E3%82%A2%E3%82%AF%E3%82%BB%E3%82%B9%E8%A8%B1%E5%8F%AF%E3%82%92packages%E3%81%AE%E3%81%BF%E3%81%AB%E5%88%B6%E9%99%90%E3%81%99%E3%82%8B/</link>
      <pubDate>Mon, 22 Nov 2021 22:37:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/GitHub%E3%81%AEPackages%E3%82%A2%E3%82%AF%E3%82%BB%E3%82%B9%E7%94%A8PAT%E3%81%AE%E3%82%A2%E3%82%AF%E3%82%BB%E3%82%B9%E8%A8%B1%E5%8F%AF%E3%82%92packages%E3%81%AE%E3%81%BF%E3%81%AB%E5%88%B6%E9%99%90%E3%81%99%E3%82%8B/</guid>
      <description>設定画面(Settings/Developer settings/Personal access tokens)からGithubPackages用のPATを作成しようとすると、 repo のスコープ</description>
    </item>
    
    <item>
      <title>GitSubmoduleで親のリポジトリでupdateしても子が同期されない</title>
      <link>https://szk302.dev/posts/GitSubmodule%E3%81%A7%E8%A6%AA%E3%81%AE%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E3%81%A7update%E3%81%97%E3%81%A6%E3%82%82%E5%AD%90%E3%81%8C%E5%90%8C%E6%9C%9F%E3%81%95%E3%82%8C%E3%81%AA%E3%81%84/</link>
      <pubDate>Mon, 22 Nov 2021 08:50:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/GitSubmodule%E3%81%A7%E8%A6%AA%E3%81%AE%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E3%81%A7update%E3%81%97%E3%81%A6%E3%82%82%E5%AD%90%E3%81%8C%E5%90%8C%E6%9C%9F%E3%81%95%E3%82%8C%E3%81%AA%E3%81%84/</guid>
      <description>git submodule update してもsubmoduleがupdateがされない。 最初に行ったsubmoduleの追加方法が悪いようだった。 対応 以下のようにブランチを</description>
    </item>
    
    <item>
      <title>Cloudflareでホスティングしてキャッシュした際ブラウザでCSSだけダウンロードブロックされる</title>
      <link>https://szk302.dev/posts/Cloudflare%E3%81%A7%E3%83%9B%E3%82%B9%E3%83%86%E3%82%A3%E3%83%B3%E3%82%B0%E3%81%97%E3%81%A6%E3%82%AD%E3%83%A3%E3%83%83%E3%82%B7%E3%83%A5%E3%81%97%E3%81%9F%E9%9A%9B%E3%83%96%E3%83%A9%E3%82%A6%E3%82%B6%E3%81%A7CSS%E3%81%A0%E3%81%91%E3%83%80%E3%82%A6%E3%83%B3%E3%83%AD%E3%83%BC%E3%83%89%E3%83%96%E3%83%AD%E3%83%83%E3%82%AF%E3%81%95%E3%82%8C%E3%82%8B/</link>
      <pubDate>Mon, 22 Nov 2021 07:46:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/Cloudflare%E3%81%A7%E3%83%9B%E3%82%B9%E3%83%86%E3%82%A3%E3%83%B3%E3%82%B0%E3%81%97%E3%81%A6%E3%82%AD%E3%83%A3%E3%83%83%E3%82%B7%E3%83%A5%E3%81%97%E3%81%9F%E9%9A%9B%E3%83%96%E3%83%A9%E3%82%A6%E3%82%B6%E3%81%A7CSS%E3%81%A0%E3%81%91%E3%83%80%E3%82%A6%E3%83%B3%E3%83%AD%E3%83%BC%E3%83%89%E3%83%96%E3%83%AD%E3%83%83%E3%82%AF%E3%81%95%E3%82%8C%E3%82%8B/</guid>
      <description>Cloudflareでこのブログをホスティングしたところ、cssファイルのダウンロードがされず画面が崩れた。 対応 Webサイトの設定からキャッ</description>
    </item>
    
    <item>
      <title>Gitで差分がある場合だけコミットする</title>
      <link>https://szk302.dev/posts/Git%E3%81%A7%E5%B7%AE%E5%88%86%E3%81%8C%E3%81%82%E3%82%8B%E5%A0%B4%E5%90%88%E3%81%A0%E3%81%91%E3%82%B3%E3%83%9F%E3%83%83%E3%83%88%E3%81%99%E3%82%8B/</link>
      <pubDate>Sun, 21 Nov 2021 20:24:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/Git%E3%81%A7%E5%B7%AE%E5%88%86%E3%81%8C%E3%81%82%E3%82%8B%E5%A0%B4%E5%90%88%E3%81%A0%E3%81%91%E3%82%B3%E3%83%9F%E3%83%83%E3%83%88%E3%81%99%E3%82%8B/</guid>
      <description>自動コミットを作成した際に、差分がない場合にコミットすると終了コードが1になり失敗する 差分がある場合にだけCommitするようにしたい。 git add</description>
    </item>
    
    <item>
      <title>react-app-rewiredでwebpack-bundle-analyzerを使用する</title>
      <link>https://szk302.dev/posts/react-app-rewired%E3%81%A7webpack-bundle-analyzer%E3%82%92%E4%BD%BF%E7%94%A8%E3%81%99%E3%82%8B/</link>
      <pubDate>Wed, 17 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://szk302.dev/posts/react-app-rewired%E3%81%A7webpack-bundle-analyzer%E3%82%92%E4%BD%BF%E7%94%A8%E3%81%99%E3%82%8B/</guid>
      <description>react-app-rewiredで作られたプロジェクトでwebpack-bundle-analyzerを使用したかったので調査 環境 react: 17.0.1 webpack: 4.44.2</description>
    </item>
    
    <item>
      <title>Webpackでビルド時にconsole.logを削除する</title>
      <link>https://szk302.dev/posts/Webpack%E3%81%A7%E3%83%93%E3%83%AB%E3%83%89%E6%99%82%E3%81%ABconsole.log%E3%82%92%E5%89%8A%E9%99%A4%E3%81%99%E3%82%8B/</link>
      <pubDate>Wed, 17 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://szk302.dev/posts/Webpack%E3%81%A7%E3%83%93%E3%83%AB%E3%83%89%E6%99%82%E3%81%ABconsole.log%E3%82%92%E5%89%8A%E9%99%A4%E3%81%99%E3%82%8B/</guid>
      <description>Reactで書いたコードに含まれているconsole.logをwebpackのビルド時に消したいという要望があったので調査 環境 react 17.0.1 webpack 4.44.2 terser-webpack-plugin 4.2.3 設</description>
    </item>
    
    <item>
      <title>Webpackでビルド時にSplitChunksPluginでファイル分割を行う</title>
      <link>https://szk302.dev/posts/Webpack%E3%81%A7%E3%83%93%E3%83%AB%E3%83%89%E6%99%82%E3%81%ABSplitChunksPlugin%E3%81%A7%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E5%88%86%E5%89%B2%E3%82%92%E8%A1%8C%E3%81%86/</link>
      <pubDate>Wed, 17 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://szk302.dev/posts/Webpack%E3%81%A7%E3%83%93%E3%83%AB%E3%83%89%E6%99%82%E3%81%ABSplitChunksPlugin%E3%81%A7%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E5%88%86%E5%89%B2%E3%82%92%E8%A1%8C%E3%81%86/</guid>
      <description>Webpackでビルド時に生成されるファイルを300kb以下に抑えたいという要望があったので調査 環境 react 17.0.1 webpack 4.44.2 terser-webpack-plugin 4.2.3 設定 以下のパラメータ設定をし</description>
    </item>
    
    <item>
      <title>Gravatarに登録したプロフィール画像のURLを取得する</title>
      <link>https://szk302.dev/posts/Gravatar%E3%81%AB%E7%99%BB%E9%8C%B2%E3%81%97%E3%81%9F%E3%83%97%E3%83%AD%E3%83%95%E3%82%A3%E3%83%BC%E3%83%AB%E7%94%BB%E5%83%8F%E3%81%AEURL%E3%82%92%E5%8F%96%E5%BE%97%E3%81%99%E3%82%8B/</link>
      <pubDate>Wed, 17 Nov 2021 00:27:20 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/Gravatar%E3%81%AB%E7%99%BB%E9%8C%B2%E3%81%97%E3%81%9F%E3%83%97%E3%83%AD%E3%83%95%E3%82%A3%E3%83%BC%E3%83%AB%E7%94%BB%E5%83%8F%E3%81%AEURL%E3%82%92%E5%8F%96%E5%BE%97%E3%81%99%E3%82%8B/</guid>
      <description>Gravatarに登録したプロフィール画像のURL取得方法を調査した。 MD5のハッシュ値(小文字)に変換して https://www.gravatar.com/avatar/ につなげることでプロフィール画</description>
    </item>
    
    <item>
      <title>Gravatarに登録したプロフィール画像のサイズを指定する</title>
      <link>https://szk302.dev/posts/Gravatar%E3%81%AB%E7%99%BB%E9%8C%B2%E3%81%97%E3%81%9F%E3%83%97%E3%83%AD%E3%83%95%E3%82%A3%E3%83%BC%E3%83%AB%E7%94%BB%E5%83%8F%E3%81%AE%E3%82%B5%E3%82%A4%E3%82%BA%E3%82%92%E6%8C%87%E5%AE%9A%E3%81%99%E3%82%8B/</link>
      <pubDate>Wed, 17 Nov 2021 00:27:20 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/Gravatar%E3%81%AB%E7%99%BB%E9%8C%B2%E3%81%97%E3%81%9F%E3%83%97%E3%83%AD%E3%83%95%E3%82%A3%E3%83%BC%E3%83%AB%E7%94%BB%E5%83%8F%E3%81%AE%E3%82%B5%E3%82%A4%E3%82%BA%E3%82%92%E6%8C%87%E5%AE%9A%E3%81%99%E3%82%8B/</guid>
      <description>URLの最後に ?s=ピルクセル数 をつける 100px(https://www.gravatar.com/avatar/d9669165d1baf624cedab4afc3dfcc42?s=100) 200px(https://www.gravatar.com/avatar/d9669165d1baf624cedab4afc3dfcc42?s=200) 参考 Gravatar/Image Requests</description>
    </item>
    
    <item>
      <title>HugoでAsciiDocファイルに記述したPlantUMLのシーケンス図を表示する</title>
      <link>https://szk302.dev/posts/Hugo%E3%81%A7AsciiDoc%E5%BD%A2%E5%BC%8F%E3%81%A7%E8%A8%98%E8%BF%B0%E3%81%97%E3%81%9FPlantumln%E3%81%AE%E3%82%B7%E3%83%BC%E3%82%B1%E3%83%B3%E3%82%B9%E5%9B%B3%E3%82%92%E8%A1%A8%E7%A4%BA%E3%81%99%E3%82%8B/</link>
      <pubDate>Wed, 17 Nov 2021 00:27:20 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/Hugo%E3%81%A7AsciiDoc%E5%BD%A2%E5%BC%8F%E3%81%A7%E8%A8%98%E8%BF%B0%E3%81%97%E3%81%9FPlantumln%E3%81%AE%E3%82%B7%E3%83%BC%E3%82%B1%E3%83%B3%E3%82%B9%E5%9B%B3%E3%82%92%E8%A1%A8%E7%A4%BA%E3%81%99%E3%82%8B/</guid>
      <description>以下のプルリクでPlantUMLが表示できるようになったようだ rework external asciidoc integration #7281 対応 Gem経由でインストールしたAsciidocが対象とのことなので</description>
    </item>
    
    <item>
      <title>Blogに使用するThemeを決める</title>
      <link>https://szk302.dev/posts/Blog%E3%81%AB%E4%BD%BF%E7%94%A8%E3%81%99%E3%82%8BTheme%E3%82%92%E6%B1%BA%E3%82%81%E3%82%8B/</link>
      <pubDate>Sun, 14 Nov 2021 00:00:00 +0900</pubDate>
      
      <guid>https://szk302.dev/posts/Blog%E3%81%AB%E4%BD%BF%E7%94%A8%E3%81%99%E3%82%8BTheme%E3%82%92%E6%B1%BA%E3%82%81%E3%82%8B/</guid>
      <description>Awesome Open Source/hugo-themeなどからThemeを探してみた。 スター数やシンプルなブログを考慮すると以下のThemeが残った。 Hugo Papermod Loveit</description>
    </item>
    
  </channel>
</rss>
