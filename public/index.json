[{"content":"CloudflarePagesにはデフォルトでcacheが組み込まれているらしい。 Webサイト側のcacheはいらないようなのでRuleで無効化した。(※ルール以外で無効化する方法がわからなかった)\n   手順  Webサイトの画面を表示しルールのページルールから[ページルールを作成]をクリック\n  \n     以下の項目を設定\n  URLが一致する場合: *.szk302.dev/*\n  その後の設定は: キャッシュレベル スキップ\n  \n     [保存]ボタンを押下\n     参考   Caching and performance\n  Disable Cloudflare caching completly\n     ","permalink":"https://szk302.dev/posts/Cloudflare%E3%81%AEWeb%E3%82%B5%E3%82%A4%E3%83%88%E8%A8%AD%E5%AE%9A%E3%81%A7cache%E3%82%92%E7%84%A1%E5%8A%B9%E3%81%AB%E3%81%99%E3%82%8B/","summary":"CloudflarePagesにはデフォルトでcacheが組み込まれているらしい。 Webサイト側のcacheはいらないようなのでRuleで無効化した。(※ルール以外で無効化する方法がわからなかった)\n   手順  Webサイトの画面を表示しルールのページルールから[ページルールを作成]をクリック\n  \n     以下の項目を設定\n  URLが一致する場合: *.szk302.dev/*\n  その後の設定は: キャッシュレベル スキップ\n  \n     [保存]ボタンを押下\n     参考   Caching and performance\n  Disable Cloudflare caching completly\n     ","title":"CloudflareのWebサイト設定でcacheを無効にする"},{"content":"Cloudflareでこのブログをホスティングしたところ、cssファイルのダウンロードがされず画面が崩れた。\n   対応 Webサイトの設定からキャッシュをパージする。\n  Webサイトの設定画面を表示\n  [キャッシュをパージ]をクリック\n  \n     [すべてパージ]をクリック\n  \n        確認   自分のブラウザのキャッシュを消して再表示\n     発生したブラウザのコンソールのエラー Failed to find a valid digest in the \u0026#39;integrity\u0026#39; attribute for resource \u0026#39;https://szk302.dev/assets/css/stylesheet.min.61dfb3f0b4cda95d2ccb867f9a3b244ce5d23e12492bcc3c277df594c7bc1adf.css\u0026#39; with computed SHA-256 integrity \u0026#39;QGnSnhEdLT7Y+NlgDiW6AvlhSlFVwPYr2z3i9eimKWU=\u0026#39;. The resource has been blocked.     参考   Failed to find a valid digest in the integrity attribute #114\n     ","permalink":"https://szk302.dev/posts/Cloudflare%E3%81%A7%E3%83%9B%E3%82%B9%E3%83%86%E3%82%A3%E3%83%B3%E3%82%B0%E3%81%97%E3%81%A6%E3%82%AD%E3%83%A3%E3%83%83%E3%82%B7%E3%83%A5%E3%81%97%E3%81%9F%E9%9A%9B%E3%83%96%E3%83%A9%E3%82%A6%E3%82%B6%E3%81%A7CSS%E3%81%A0%E3%81%91%E3%83%80%E3%82%A6%E3%83%B3%E3%83%AD%E3%83%BC%E3%83%89%E3%83%96%E3%83%AD%E3%83%83%E3%82%AF%E3%81%95%E3%82%8C%E3%82%8B/","summary":"Cloudflareでこのブログをホスティングしたところ、cssファイルのダウンロードがされず画面が崩れた。\n   対応 Webサイトの設定からキャッシュをパージする。\n  Webサイトの設定画面を表示\n  [キャッシュをパージ]をクリック\n  \n     [すべてパージ]をクリック\n  \n        確認   自分のブラウザのキャッシュを消して再表示\n     発生したブラウザのコンソールのエラー Failed to find a valid digest in the \u0026#39;integrity\u0026#39; attribute for resource \u0026#39;https://szk302.dev/assets/css/stylesheet.min.61dfb3f0b4cda95d2ccb867f9a3b244ce5d23e12492bcc3c277df594c7bc1adf.css\u0026#39; with computed SHA-256 integrity \u0026#39;QGnSnhEdLT7Y+NlgDiW6AvlhSlFVwPYr2z3i9eimKWU=\u0026#39;. The resource has been blocked.     参考   Failed to find a valid digest in the integrity attribute #114","title":"Cloudflareでホスティングしてキャッシュした際ブラウザでCSSだけダウンロードブロックされる"},{"content":"Cloudfrareでこのブログをホスティングしたところ、cssファイルのダウンロードがされず画面が崩れた。\n   対応 Webサイトの設定からキャッシュをパージする。\n  Webサイトの設定画面を表示\n  [キャッシュをパージ]をクリック\n  \n     [すべてパージ]をクリック\n  \n        確認   自分のブラウザのキャッシュを消して再表示\n     発生したブラウザのコンソールのエラー Failed to find a valid digest in the \u0026#39;integrity\u0026#39; attribute for resource \u0026#39;https://szk302.dev/assets/css/stylesheet.min.61dfb3f0b4cda95d2ccb867f9a3b244ce5d23e12492bcc3c277df594c7bc1adf.css\u0026#39; with computed SHA-256 integrity \u0026#39;QGnSnhEdLT7Y+NlgDiW6AvlhSlFVwPYr2z3i9eimKWU=\u0026#39;. The resource has been blocked.     参考   Failed to find a valid digest in the integrity attribute #114\n     ","permalink":"https://szk302.dev/posts/Cloudfrare%E3%81%A7%E3%83%9B%E3%82%B9%E3%83%86%E3%82%A3%E3%83%B3%E3%82%B0%E3%81%97%E3%81%A6%E3%82%AD%E3%83%A3%E3%83%83%E3%82%B7%E3%83%A5%E3%81%97%E3%81%9F%E9%9A%9B%E3%83%96%E3%83%A9%E3%82%A6%E3%82%B6%E3%81%A7CSS%E3%81%A0%E3%81%91%E3%83%80%E3%82%A6%E3%83%B3%E3%83%AD%E3%83%BC%E3%83%89%E3%83%96%E3%83%AD%E3%83%83%E3%82%AF%E3%81%95%E3%82%8C%E3%82%8B/","summary":"Cloudfrareでこのブログをホスティングしたところ、cssファイルのダウンロードがされず画面が崩れた。\n   対応 Webサイトの設定からキャッシュをパージする。\n  Webサイトの設定画面を表示\n  [キャッシュをパージ]をクリック\n  \n     [すべてパージ]をクリック\n  \n        確認   自分のブラウザのキャッシュを消して再表示\n     発生したブラウザのコンソールのエラー Failed to find a valid digest in the \u0026#39;integrity\u0026#39; attribute for resource \u0026#39;https://szk302.dev/assets/css/stylesheet.min.61dfb3f0b4cda95d2ccb867f9a3b244ce5d23e12492bcc3c277df594c7bc1adf.css\u0026#39; with computed SHA-256 integrity \u0026#39;QGnSnhEdLT7Y+NlgDiW6AvlhSlFVwPYr2z3i9eimKWU=\u0026#39;. The resource has been blocked.     参考   Failed to find a valid digest in the integrity attribute #114","title":"Cloudfrareでホスティングしてキャッシュした際ブラウザでCSSだけダウンロードブロックされる"},{"content":"自動コミットを作成した際に、差分がない場合にコミットすると終了コードが1になり失敗する 差分がある場合にだけCommitするようにしたい。\n git add -A git diff-index --quiet HEAD || git commit -m \u0026#39;Auto commit\u0026#39;     参考   stackoverflow/How to git commit nothing without an error?\n     ","permalink":"https://szk302.dev/posts/Git%E3%81%A7%E5%B7%AE%E5%88%86%E3%81%8C%E3%81%82%E3%82%8B%E5%A0%B4%E5%90%88%E3%81%A0%E3%81%91%E3%82%B3%E3%83%9F%E3%83%83%E3%83%88%E3%81%99%E3%82%8B/","summary":"自動コミットを作成した際に、差分がない場合にコミットすると終了コードが1になり失敗する 差分がある場合にだけCommitするようにしたい。\n git add -A git diff-index --quiet HEAD || git commit -m \u0026#39;Auto commit\u0026#39;     参考   stackoverflow/How to git commit nothing without an error?\n     ","title":"Gitで差分がある場合だけコミットする"},{"content":"react-app-rewiredで作られたプロジェクトでwebpack-bundle-analyzerを使用したかったので調査\n   環境   react: 17.0.1\n  webpack: 4.44.2\n  react-app-rewired: 2.1.8\n     方法 byzyk/react-app-rewire-webpack-bundle-analyzer を使用する\n  インストール\n  yarn add --dev react-app-rewire-webpack-bundle-analyzer\n     config-overrides.jsに以下のように記述\nconst rewireWebpackBundleAnalyzer = require(\u0026#39;react-app-rewire-webpack-bundle-analyzer\u0026#39;) module.exports = function override(config, env) { // ... if (env === \u0026#39;production\u0026#39;) { config = rewireWebpackBundleAnalyzer(config, env, { analyzerMode: \u0026#39;static\u0026#39;, reportFilename: \u0026#39;report.html\u0026#39; }) } return config }     yarn build でビルド終了後、ブラウザが立ち上がり結果が表示される\n     参考   byzyk/react-app-rewire-webpack-bundle-analyzer\n     ","permalink":"https://szk302.dev/posts/react-app-rewired%E3%81%A7webpack-bundle-analyzer%E3%82%92%E4%BD%BF%E7%94%A8%E3%81%99%E3%82%8B/","summary":"react-app-rewiredで作られたプロジェクトでwebpack-bundle-analyzerを使用したかったので調査\n   環境   react: 17.0.1\n  webpack: 4.44.2\n  react-app-rewired: 2.1.8\n     方法 byzyk/react-app-rewire-webpack-bundle-analyzer を使用する\n  インストール\n  yarn add --dev react-app-rewire-webpack-bundle-analyzer\n     config-overrides.jsに以下のように記述\nconst rewireWebpackBundleAnalyzer = require(\u0026#39;react-app-rewire-webpack-bundle-analyzer\u0026#39;) module.exports = function override(config, env) { // ... if (env === \u0026#39;production\u0026#39;) { config = rewireWebpackBundleAnalyzer(config, env, { analyzerMode: \u0026#39;static\u0026#39;, reportFilename: \u0026#39;report.html\u0026#39; }) } return config }     yarn build でビルド終了後、ブラウザが立ち上がり結果が表示される","title":"react-app-rewiredでwebpack-bundle-analyzerを使用する"},{"content":"Reactで書いたコードに含まれているconsole.logをwebpackのビルド時に消したいという要望があったので調査\n   環境  react  17.0.1\n webpack  4.44.2\n terser-webpack-plugin  4.2.3\n     設定 console.* 系すべてを消す場合 terserOptionsのcompressに drop_console=true を設定する\n { terserOptions:{ cache: true, parallel: true, sourceMap: false, compress:{ drop_console: true, } } }    console.log,infoだけ消す場合 terserOptionsのcompressに pure_funcs=[\u0026#39;console.log\u0026#39;,\u0026#39;console.info\u0026#39;] を設定する\n { terserOptions:{ cache: true, parallel: true, sourceMap: false, compress:{ pure_funcs: [ \u0026#39;console.log\u0026#39;, \u0026#39;console.info\u0026#39; ] } } }      参考   Remove console.log with TerserWebpackPlugin\n  terser/terser\n  webpack/TerserWebpackPlugin\n     ","permalink":"https://szk302.dev/posts/Webpack%E3%81%A7%E3%83%93%E3%83%AB%E3%83%89%E6%99%82%E3%81%ABconsole.log%E3%82%92%E5%89%8A%E9%99%A4%E3%81%99%E3%82%8B/","summary":"Reactで書いたコードに含まれているconsole.logをwebpackのビルド時に消したいという要望があったので調査\n   環境  react  17.0.1\n webpack  4.44.2\n terser-webpack-plugin  4.2.3\n     設定 console.* 系すべてを消す場合 terserOptionsのcompressに drop_console=true を設定する\n { terserOptions:{ cache: true, parallel: true, sourceMap: false, compress:{ drop_console: true, } } }    console.log,infoだけ消す場合 terserOptionsのcompressに pure_funcs=[\u0026#39;console.log\u0026#39;,\u0026#39;console.info\u0026#39;] を設定する\n { terserOptions:{ cache: true, parallel: true, sourceMap: false, compress:{ pure_funcs: [ \u0026#39;console.log\u0026#39;, \u0026#39;console.info\u0026#39; ] } } }      参考   Remove console.","title":"Webpackでビルド時にconsole.logを削除する"},{"content":"Webpackでビルド時に生成されるファイルを300kb以下に抑えたいという要望があったので調査\n   環境  react  17.0.1\n webpack  4.44.2\n terser-webpack-plugin  4.2.3\n     設定 以下のパラメータ設定をしたところ、ファイル数とファイルサイズが要望通りに収まった\n   minSize: 100000,\n  maxSize: 300000,\n  maxInitialRequests: 10,\n   { optimization: { splitChunks: { chunks: \u0026#39;initial\u0026#39;, minSize: 100000, maxSize: 300000, maxInitialRequests: 10, cacheGroups: { vendor: { test: /[\\\\/]node_modules[\\\\/]/, reuseExistingChunk: true, name(module,chunks,cacheGroupKey) { const allChunksHashes = chunks.map((item)=\u0026gt;item.hash).join(\u0026#39;~\u0026#39;); return `${cacheGroupKey}${allChunksHashes}` } }, }, }, }, }   ファイルは以下のようなファイル名で出力された。\n   main~ハッシュ値1.chunk.js\n  main~ハッシュ値1.chunk.js.map\n  main~ハッシュ値2.chunk.js\n  main~ハッシュ値2.chunk.js.map\n  runtime-main.ハッシュ値.js\n  runtime-main.ハッシュ値.js.map\n  vendor~ハッシュ値1.js\n  vendor~ハッシュ値1.js.map\n  vendor~ハッシュ値2.js\n  vendor~ハッシュ値2.js.map\n     参考   webpack/SplitChunksPlugin *\n     ","permalink":"https://szk302.dev/posts/Webpack%E3%81%A7%E3%83%93%E3%83%AB%E3%83%89%E6%99%82%E3%81%ABSplitChunksPlugin%E3%81%A7%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E5%88%86%E5%89%B2%E3%82%92%E8%A1%8C%E3%81%86/","summary":"Webpackでビルド時に生成されるファイルを300kb以下に抑えたいという要望があったので調査\n   環境  react  17.0.1\n webpack  4.44.2\n terser-webpack-plugin  4.2.3\n     設定 以下のパラメータ設定をしたところ、ファイル数とファイルサイズが要望通りに収まった\n   minSize: 100000,\n  maxSize: 300000,\n  maxInitialRequests: 10,\n   { optimization: { splitChunks: { chunks: \u0026#39;initial\u0026#39;, minSize: 100000, maxSize: 300000, maxInitialRequests: 10, cacheGroups: { vendor: { test: /[\\\\/]node_modules[\\\\/]/, reuseExistingChunk: true, name(module,chunks,cacheGroupKey) { const allChunksHashes = chunks.map((item)=\u0026gt;item.hash).join(\u0026#39;~\u0026#39;); return `${cacheGroupKey}${allChunksHashes}` } }, }, }, }, }   ファイルは以下のようなファイル名で出力された。","title":"Webpackでビルド時にSplitChunksPluginでファイル分割を行う"},{"content":"Gravatarに登録したプロフィール画像のURL取得方法を調査した。\n MD5のハッシュ値(小文字)に変換して https://www.gravatar.com/avatar/ につなげることでプロフィール画像のURLになる\n 以下、Powershellのスクリプト\n $email = \u0026#34;メールアドレス\u0026#34; $stream = [IO.MemoryStream]::new([Text.Encoding]::UTF8.GetBytes($email.Trim().ToLower())) $hash = (Get-FileHash -InputStream $stream -Algorithm MD5).Hash.toLower() echo \u0026#34;https://www.gravatar.com/avatar/$hash\u0026#34;     参考   Gravatar/Creating the Hash\n     ","permalink":"https://szk302.dev/posts/Gravatar%E3%81%AB%E7%99%BB%E9%8C%B2%E3%81%97%E3%81%9F%E3%83%97%E3%83%AD%E3%83%95%E3%82%A3%E3%83%BC%E3%83%AB%E7%94%BB%E5%83%8F%E3%81%AEURL%E3%82%92%E5%8F%96%E5%BE%97%E3%81%99%E3%82%8B/","summary":"Gravatarに登録したプロフィール画像のURL取得方法を調査した。\n MD5のハッシュ値(小文字)に変換して https://www.gravatar.com/avatar/ につなげることでプロフィール画像のURLになる\n 以下、Powershellのスクリプト\n $email = \u0026#34;メールアドレス\u0026#34; $stream = [IO.MemoryStream]::new([Text.Encoding]::UTF8.GetBytes($email.Trim().ToLower())) $hash = (Get-FileHash -InputStream $stream -Algorithm MD5).Hash.toLower() echo \u0026#34;https://www.gravatar.com/avatar/$hash\u0026#34;     参考   Gravatar/Creating the Hash\n     ","title":"Gravatarに登録したプロフィール画像のURLを取得する"},{"content":"URLの最後に ?s=ピルクセル数 をつける\n  100px(https://www.gravatar.com/avatar/d9669165d1baf624cedab4afc3dfcc42?s=100)  \n 200px(https://www.gravatar.com/avatar/d9669165d1baf624cedab4afc3dfcc42?s=200)  \n     参考   Gravatar/Image Requests\n     ","permalink":"https://szk302.dev/posts/Gravatar%E3%81%AB%E7%99%BB%E9%8C%B2%E3%81%97%E3%81%9F%E3%83%97%E3%83%AD%E3%83%95%E3%82%A3%E3%83%BC%E3%83%AB%E7%94%BB%E5%83%8F%E3%81%AE%E3%82%B5%E3%82%A4%E3%82%BA%E3%82%92%E6%8C%87%E5%AE%9A%E3%81%99%E3%82%8B/","summary":"URLの最後に ?s=ピルクセル数 をつける\n  100px(https://www.gravatar.com/avatar/d9669165d1baf624cedab4afc3dfcc42?s=100)  \n 200px(https://www.gravatar.com/avatar/d9669165d1baf624cedab4afc3dfcc42?s=200)  \n     参考   Gravatar/Image Requests\n     ","title":"Gravatarに登録したプロフィール画像のサイズを指定する"},{"content":"以下のプルリクでPlantUMLが表示できるようになったようだ\n   rework external asciidoc integration #7281\n     対応 Gem経由でインストールしたAsciidocが対象とのことなので、ベースイメージを asciidoctor/docker-asciidoctor に変更し、 必要なモジュールを追加する。\n  Hugoを動かしているDockerファイルにモジュールを追加\nRUN apk add --no-cache ruby-dev alpine-sdk graphviz RUN gem install bundler json asciidoctor-html5s asciidoctor-diagram     config.ymlに以下のように設定を追加\n   markup: asciidocext: extensions: - asciidoctor-html5s - asciidoctor-diagram workingFolderCurrent: true trace: true attributes: my-base-url: \u0026#39;https://localhost/\u0026#39; my-attribute-name: my value     確認  hugo --destination 出力先ディレクトリ\n     参考   rework external asciidoc integration #7281\n     ","permalink":"https://szk302.dev/posts/Hugo%E3%81%A7AsciiDoc%E5%BD%A2%E5%BC%8F%E3%81%A7%E8%A8%98%E8%BF%B0%E3%81%97%E3%81%9FPlantumln%E3%81%AE%E3%82%B7%E3%83%BC%E3%82%B1%E3%83%B3%E3%82%B9%E5%9B%B3%E3%82%92%E8%A1%A8%E7%A4%BA%E3%81%99%E3%82%8B/","summary":"以下のプルリクでPlantUMLが表示できるようになったようだ\n   rework external asciidoc integration #7281\n     対応 Gem経由でインストールしたAsciidocが対象とのことなので、ベースイメージを asciidoctor/docker-asciidoctor に変更し、 必要なモジュールを追加する。\n  Hugoを動かしているDockerファイルにモジュールを追加\nRUN apk add --no-cache ruby-dev alpine-sdk graphviz RUN gem install bundler json asciidoctor-html5s asciidoctor-diagram     config.ymlに以下のように設定を追加\n   markup: asciidocext: extensions: - asciidoctor-html5s - asciidoctor-diagram workingFolderCurrent: true trace: true attributes: my-base-url: \u0026#39;https://localhost/\u0026#39; my-attribute-name: my value     確認  hugo --destination 出力先ディレクトリ","title":"HugoでAsciiDocファイルに記述したPlantUMLのシーケンス図を表示する"},{"content":"工事中\n ","permalink":"https://szk302.dev/fixed/blog/","summary":"工事中","title":"このブログについて"},{"content":"工事中\n ","permalink":"https://szk302.dev/fixed/profile/","summary":"工事中","title":"プロフィール"},{"content":"Awesome Open Source/hugo-themeなどからThemeを探してみた。\n スター数やシンプルなブログを考慮すると以下のThemeが残った。\n   Hugo Papermod\n  Loveit\n   fuseを使用してみたかったのでPapermodに決定\n   参考   Awesome Open Source/hugo-theme\n  Hugo Papermod\n  Loveit\n     ","permalink":"https://szk302.dev/posts/Blog%E3%81%AB%E4%BD%BF%E7%94%A8%E3%81%99%E3%82%8BTheme%E3%82%92%E6%B1%BA%E3%82%81%E3%82%8B/","summary":"Awesome Open Source/hugo-themeなどからThemeを探してみた。\n スター数やシンプルなブログを考慮すると以下のThemeが残った。\n   Hugo Papermod\n  Loveit\n   fuseを使用してみたかったのでPapermodに決定\n   参考   Awesome Open Source/hugo-theme\n  Hugo Papermod\n  Loveit\n     ","title":"Blogに使用するThemeを決める"},{"content":"設定画面(Settings/Developer settings/Personal access tokens)からGithubPackages用のPATを作成しようとすると、 repo のスコープのアクセス許可が追加されてしまう。 以下のアドレスからアクセスすることで、`packages`のスコープのみ追加できる\n   https://github.com/settings/tokens/new?scopes=write:packages\n     参考   個人アクセストークンを使用する\n     ","permalink":"https://szk302.dev/posts/GitHub%E3%81%AEPackages%E3%82%A2%E3%82%AF%E3%82%BB%E3%82%B9%E7%94%A8PAT%E3%81%AE%E3%82%A2%E3%82%AF%E3%82%BB%E3%82%B9%E8%A8%B1%E5%8F%AF%E3%82%92packages%E3%81%AE%E3%81%BF%E3%81%AB%E5%88%B6%E9%99%90%E3%81%99%E3%82%8B/","summary":"設定画面(Settings/Developer settings/Personal access tokens)からGithubPackages用のPATを作成しようとすると、 repo のスコープのアクセス許可が追加されてしまう。 以下のアドレスからアクセスすることで、`packages`のスコープのみ追加できる\n   https://github.com/settings/tokens/new?scopes=write:packages\n     参考   個人アクセストークンを使用する\n     ","title":""}]